-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2023.2/1059873 Production Release
--  HLS Date:       Mon Aug  7 10:54:31 PDT 2023
-- 
--  Generated by:   r12016@cad40
--  Generated date: Thu Jun 13 03:09:27 2024
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_wport_en_2_15_12_32768_1_32768_12_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_wport_en_2_15_12_32768_1_32768_12_1_gen
    IS
  PORT(
    clken : OUT STD_LOGIC;
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    wadr_d : IN STD_LOGIC_VECTOR (14 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC
  );
END UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_wport_en_2_15_12_32768_1_32768_12_1_gen;

ARCHITECTURE v3 OF UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_wport_en_2_15_12_32768_1_32768_12_1_gen
    IS
  -- Default Constants

BEGIN
  clken <= (clken_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v3;

-- ------------------------------------------------------------------
--  Design Unit:    UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_rport_en_1_15_12_32768_1_32768_12_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_rport_en_1_15_12_32768_1_32768_12_1_gen
    IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    q_d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (14 DOWNTO 0);
    re_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_rport_en_1_15_12_32768_1_32768_12_1_gen;

ARCHITECTURE v3 OF UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_rport_en_1_15_12_32768_1_32768_12_1_gen
    IS
  -- Default Constants

BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
END v3;

-- ------------------------------------------------------------------
--  Design Unit:    UNET_IP_batchnorm_relu_run_batch_run_batch_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY UNET_IP_batchnorm_relu_run_batch_run_batch_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    arst_n : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (20 DOWNTO 0);
    main_C_0_tr0 : IN STD_LOGIC;
    LOOP_MEAN_C_0_tr0 : IN STD_LOGIC;
    LOOP_CH_C_5_tr0 : IN STD_LOGIC;
    LOOP_VAR_C_3_tr0 : IN STD_LOGIC;
    LOOP_OUT_C_0_tr0 : IN STD_LOGIC;
    LOOP_CH_C_12_tr0 : IN STD_LOGIC
  );
END UNET_IP_batchnorm_relu_run_batch_run_batch_fsm;

ARCHITECTURE v3 OF UNET_IP_batchnorm_relu_run_batch_run_batch_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1
  TYPE UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1_ST IS (main_C_0, LOOP_MEAN_C_0,
      LOOP_CH_C_0, LOOP_CH_C_1, LOOP_CH_C_2, LOOP_CH_C_3, LOOP_CH_C_4, LOOP_CH_C_5,
      LOOP_VAR_C_0, LOOP_VAR_C_1, LOOP_VAR_C_2, LOOP_VAR_C_3, LOOP_CH_C_6, LOOP_CH_C_7,
      LOOP_CH_C_8, LOOP_CH_C_9, LOOP_CH_C_10, LOOP_CH_C_11, LOOP_OUT_C_0, LOOP_CH_C_12,
      main_C_1);

  SIGNAL state_var : UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1_ST;
  SIGNAL state_var_NS : UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1_ST;

BEGIN
  UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1 : PROCESS (main_C_0_tr0, LOOP_MEAN_C_0_tr0,
      LOOP_CH_C_5_tr0, LOOP_VAR_C_3_tr0, LOOP_OUT_C_0_tr0, LOOP_CH_C_12_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN LOOP_MEAN_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000000000010");
        IF ( LOOP_MEAN_C_0_tr0 = '1' ) THEN
          state_var_NS <= LOOP_CH_C_0;
        ELSE
          state_var_NS <= LOOP_MEAN_C_0;
        END IF;
      WHEN LOOP_CH_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000000000100");
        state_var_NS <= LOOP_CH_C_1;
      WHEN LOOP_CH_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000000001000");
        state_var_NS <= LOOP_CH_C_2;
      WHEN LOOP_CH_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000000010000");
        state_var_NS <= LOOP_CH_C_3;
      WHEN LOOP_CH_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000000100000");
        state_var_NS <= LOOP_CH_C_4;
      WHEN LOOP_CH_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000001000000");
        state_var_NS <= LOOP_CH_C_5;
      WHEN LOOP_CH_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000010000000");
        IF ( LOOP_CH_C_5_tr0 = '1' ) THEN
          state_var_NS <= LOOP_CH_C_6;
        ELSE
          state_var_NS <= LOOP_VAR_C_0;
        END IF;
      WHEN LOOP_VAR_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000100000000");
        state_var_NS <= LOOP_VAR_C_1;
      WHEN LOOP_VAR_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000001000000000");
        state_var_NS <= LOOP_VAR_C_2;
      WHEN LOOP_VAR_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000010000000000");
        state_var_NS <= LOOP_VAR_C_3;
      WHEN LOOP_VAR_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000100000000000");
        IF ( LOOP_VAR_C_3_tr0 = '1' ) THEN
          state_var_NS <= LOOP_CH_C_6;
        ELSE
          state_var_NS <= LOOP_VAR_C_0;
        END IF;
      WHEN LOOP_CH_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000001000000000000");
        state_var_NS <= LOOP_CH_C_7;
      WHEN LOOP_CH_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000010000000000000");
        state_var_NS <= LOOP_CH_C_8;
      WHEN LOOP_CH_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000100000000000000");
        state_var_NS <= LOOP_CH_C_9;
      WHEN LOOP_CH_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001000000000000000");
        state_var_NS <= LOOP_CH_C_10;
      WHEN LOOP_CH_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010000000000000000");
        state_var_NS <= LOOP_CH_C_11;
      WHEN LOOP_CH_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100000000000000000");
        state_var_NS <= LOOP_OUT_C_0;
      WHEN LOOP_OUT_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000000000000000000");
        IF ( LOOP_OUT_C_0_tr0 = '1' ) THEN
          state_var_NS <= LOOP_CH_C_12;
        ELSE
          state_var_NS <= LOOP_OUT_C_0;
        END IF;
      WHEN LOOP_CH_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000000000000000000");
        IF ( LOOP_CH_C_12_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= LOOP_MEAN_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000000000000000000");
        state_var_NS <= main_C_0;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000000000000001");
        IF ( main_C_0_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= LOOP_MEAN_C_0;
        END IF;
    END CASE;
  END PROCESS UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1;

  UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1_REG : PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      state_var <= main_C_0;
    ELSIF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        state_var <= state_var_NS;
      END IF;
    END IF;
  END PROCESS UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_1_REG;

END v3;

-- ------------------------------------------------------------------
--  Design Unit:    UNET_IP_batchnorm_relu_run_batch_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY UNET_IP_batchnorm_relu_run_batch_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    arst_n : IN STD_LOGIC;
    operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z : IN STD_LOGIC_VECTOR (33
        DOWNTO 0);
    operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg : OUT STD_LOGIC_VECTOR
        (27 DOWNTO 0)
  );
END UNET_IP_batchnorm_relu_run_batch_wait_dp;

ARCHITECTURE v3 OF UNET_IP_batchnorm_relu_run_batch_wait_dp IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg_pconst_33_6 :
      STD_LOGIC_VECTOR (27 DOWNTO 0);

BEGIN
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg_pconst_33_6;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg_pconst_33_6 <= STD_LOGIC_VECTOR'(
          "0000000000000000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg_pconst_33_6 <=
            STD_LOGIC_VECTOR'( "0000000000000000000000000000");
      ELSE
        operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg_pconst_33_6 <=
            operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z(33 DOWNTO 6);
      END IF;
    END IF;
  END PROCESS;
END v3;

-- ------------------------------------------------------------------
--  Design Unit:    UNET_IP_batchnorm_relu_run_batch
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY UNET_IP_batchnorm_relu_run_batch IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    arst_n : IN STD_LOGIC;
    input_triosy_lz : OUT STD_LOGIC;
    output_triosy_lz : OUT STD_LOGIC;
    channels : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    height : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    width : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    offset : IN STD_LOGIC_VECTOR (9 DOWNTO 0);
    input_rsci_q_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    input_rsci_radr_d : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
    output_rsci_d_d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
    operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a : OUT STD_LOGIC_VECTOR
        (33 DOWNTO 0);
    operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b : OUT STD_LOGIC_VECTOR
        (12 DOWNTO 0);
    operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z : IN STD_LOGIC_VECTOR (33
        DOWNTO 0);
    input_rsci_re_d_pff : OUT STD_LOGIC;
    output_rsci_we_d_pff : OUT STD_LOGIC
  );
END UNET_IP_batchnorm_relu_run_batch;

ARCHITECTURE v3 OF UNET_IP_batchnorm_relu_run_batch IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL LOOP_OUT_div_5_cmp_z : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_1_z : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_2_z : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_3_z : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_4_z : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg : STD_LOGIC_VECTOR
      (27 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_a_21_6 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_b_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_1_a_21_6 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_1_b_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_2_a_21_6 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_2_b_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_3_a_21_6 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_3_b_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_4_a_21_6 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_4_b_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL fsm_output : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL LOOP_OUT_LOOP_OUT_acc_tmp : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_or_tmp
      : STD_LOGIC;
  SIGNAL and_dcpl_45 : STD_LOGIC;
  SIGNAL and_dcpl_46 : STD_LOGIC;
  SIGNAL and_dcpl_49 : STD_LOGIC;
  SIGNAL and_dcpl_50 : STD_LOGIC;
  SIGNAL or_dcpl_54 : STD_LOGIC;
  SIGNAL or_dcpl_55 : STD_LOGIC;
  SIGNAL or_dcpl_56 : STD_LOGIC;
  SIGNAL or_dcpl_58 : STD_LOGIC;
  SIGNAL or_dcpl_60 : STD_LOGIC;
  SIGNAL and_dcpl_63 : STD_LOGIC;
  SIGNAL and_dcpl_65 : STD_LOGIC;
  SIGNAL or_dcpl_62 : STD_LOGIC;
  SIGNAL or_dcpl_64 : STD_LOGIC;
  SIGNAL and_dcpl_77 : STD_LOGIC;
  SIGNAL and_dcpl_79 : STD_LOGIC;
  SIGNAL and_dcpl_84 : STD_LOGIC;
  SIGNAL and_dcpl_85 : STD_LOGIC;
  SIGNAL and_dcpl_87 : STD_LOGIC;
  SIGNAL and_dcpl_89 : STD_LOGIC;
  SIGNAL and_dcpl_91 : STD_LOGIC;
  SIGNAL and_dcpl_92 : STD_LOGIC;
  SIGNAL and_dcpl_94 : STD_LOGIC;
  SIGNAL LOOP_MEAN_stage_0 : STD_LOGIC;
  SIGNAL exit_LOOP_CH_sva_mx0 : STD_LOGIC;
  SIGNAL LOOP_MEAN_stage_0_2 : STD_LOGIC;
  SIGNAL LOOP_OUT_stage_0 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_8 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_7 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_6 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_5 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_4 : STD_LOGIC;
  SIGNAL LOOP_OUT_stage_0_5 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_3 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_2 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_1 : STD_LOGIC;
  SIGNAL LOOP_MEAN_stage_0_3 : STD_LOGIC;
  SIGNAL LOOP_MEAN_asn_6_itm_2 : STD_LOGIC;
  SIGNAL LOOP_OUT_div_5cyc_st_4 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_OUT_stage_0_8 : STD_LOGIC;
  SIGNAL ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_1
      : STD_LOGIC;
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_1
      : STD_LOGIC;
  SIGNAL LOOP_CH_var_21_1_sva : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5cyc_st_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_OUT_stage_0_4 : STD_LOGIC;
  SIGNAL exit_LOOP_OUT_sva_st_9 : STD_LOGIC;
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_3
      : STD_LOGIC;
  SIGNAL LOOP_OUT_div_5cyc_st_5 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_OUT_stage_0_9 : STD_LOGIC;
  SIGNAL reg_output_triosy_obj_ld_cse : STD_LOGIC;
  SIGNAL nor_4_cse : STD_LOGIC;
  SIGNAL or_cse : STD_LOGIC;
  SIGNAL or_123_ssc : STD_LOGIC;
  SIGNAL reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd : STD_LOGIC_VECTOR
      (13 DOWNTO 0);
  SIGNAL reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_2 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL or_159_cse : STD_LOGIC;
  SIGNAL nor_21_cse : STD_LOGIC;
  SIGNAL LOOP_MEAN_mul_itm_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_MEAN_asn_3_itm_1 : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL LOOP_VAR_acc_1_itm : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_slc_LOOP_OUT_mul_sdt_25_4_21_2_itm_1_11_0 : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_2 : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL operator_32_8_false_AC_TRN_AC_WRAP_lshift_itm : STD_LOGIC_VECTOR (31 DOWNTO
      0);
  SIGNAL LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL operator_22_0_false_AC_TRN_AC_WRAP_lshift_itm : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL z_out : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL z_out_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL num_elements_sva : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL LOOP_CH_c_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LOOP_CH_var_tmp_33_6_sva : STD_LOGIC_VECTOR (27 DOWNTO 0);
  SIGNAL LOOP_CH_i_1_sva : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL LOOP_CH_mean_sva : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5cyc : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_OUT_stage_0_6 : STD_LOGIC;
  SIGNAL LOOP_OUT_stage_0_7 : STD_LOGIC;
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_qr_sva_1_1
      : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_2
      : STD_LOGIC;
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
      : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL LOOP_OUT_mul_itm_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_slc_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_1_20_7_11_0_itm_1
      : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_itm_1
      : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_1_itm_1
      : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_1
      : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_2
      : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm_1 : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL LOOP_OUT_acc_5_itm_1 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_1 : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5cyc_st_2 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5cyc_st_3 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mut_1_1_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_OUT_div_tmp_duc_17_0 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_4_b_13_0_mx0c1 : STD_LOGIC;
  SIGNAL LOOP_OUT_div_5_cmp_3_b_13_0_mx0c1 : STD_LOGIC;
  SIGNAL LOOP_OUT_div_5_cmp_2_b_13_0_mx0c1 : STD_LOGIC;
  SIGNAL LOOP_OUT_div_5_cmp_1_b_13_0_mx0c1 : STD_LOGIC;
  SIGNAL LOOP_OUT_div_5_cmp_b_13_0_mx0c1 : STD_LOGIC;
  SIGNAL LOOP_CH_c_sva_2 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LOOP_CH_var_tmp_33_6_sva_mx0w1 : STD_LOGIC_VECTOR (27 DOWNTO 0);
  SIGNAL LOOP_CH_i_1_sva_2 : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL LOOP_VAR_acc_4_cse_sva_mx0w1 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LOOP_CH_mean_tmp_19_8_sva_2 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1
      : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_VAR_mul_4 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_acc_imod_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_OUT_acc_idiv_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_OUT_acc_3_cse_sva_1 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL LOOP_VAR_acc_4_cse_sva_14_12 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_VAR_acc_4_cse_sva_11_0 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL leading_sign_22_0_c5945fbeaae02c4edab24e6eca5e07cb263f_1 : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL and_107_rgt : STD_LOGIC;
  SIGNAL and_108_rgt : STD_LOGIC;
  SIGNAL and_109_rgt : STD_LOGIC;
  SIGNAL and_110_rgt : STD_LOGIC;
  SIGNAL and_111_rgt : STD_LOGIC;
  SIGNAL reg_LOOP_CH_idx_14_0_sva_2_ftd : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL reg_LOOP_CH_idx_14_0_sva_2_ftd_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL LOOP_CH_idx_14_0_sva_3_14_12 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_CH_idx_14_0_sva_3_11_0 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL LOOP_CH_c_or_cse : STD_LOGIC;
  SIGNAL reg_LOOP_CH_idx_14_0_sva_4_ftd : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL reg_LOOP_CH_idx_14_0_sva_4_ftd_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL LOOP_CH_idx_14_0_sva_5_14_12 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_CH_idx_14_0_sva_5_11_0 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL reg_LOOP_CH_idx_14_0_sva_6_ftd : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL reg_LOOP_CH_idx_14_0_sva_6_ftd_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL LOOP_CH_idx_14_0_sva_7_14_12 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LOOP_CH_idx_14_0_sva_7_11_0 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL reg_LOOP_CH_idx_14_0_sva_8_ftd : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL reg_LOOP_CH_idx_14_0_sva_8_ftd_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_itm_35_11_1
      : STD_LOGIC_VECTOR (24 DOWNTO 0);
  SIGNAL LOOP_OUT_acc_10_itm_13_1 : STD_LOGIC;

  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_mux_nl : STD_LOGIC_VECTOR (13
      DOWNTO 0);
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_or_1_nl : STD_LOGIC;
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_and_5_nl : STD_LOGIC;
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_or_nl : STD_LOGIC;
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_mux_1_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL LOOP_MEAN_mux1h_8_nl : STD_LOGIC;
  SIGNAL LOOP_OUT_LOOP_OUT_and_nl : STD_LOGIC;
  SIGNAL LOOP_VAR_acc_7_nl : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL LOOP_VAR_acc_8_nl : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL nor_29_nl : STD_LOGIC;
  SIGNAL LOOP_MEAN_mux_3_nl : STD_LOGIC;
  SIGNAL LOOP_OUT_mux_nl : STD_LOGIC;
  SIGNAL LOOP_CH_mean_tmp_LOOP_CH_mean_tmp_and_nl : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL LOOP_CH_mean_tmp_mux_1_nl : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL and_159_nl : STD_LOGIC;
  SIGNAL LOOP_CH_mean_tmp_nand_nl : STD_LOGIC;
  SIGNAL or_164_nl : STD_LOGIC;
  SIGNAL LOOP_OUT_LOOP_OUT_mul_nl : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL LOOP_OUT_mux1h_6_nl : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL and_105_nl : STD_LOGIC;
  SIGNAL LOOP_OUT_mux_10_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qif_acc_nl : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL LOOP_CH_acc_2_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LOOP_CH_acc_3_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL LOOP_VAR_mul_2_nl : STD_LOGIC_VECTOR (27 DOWNTO 0);
  SIGNAL ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_nl
      : STD_LOGIC_VECTOR (35 DOWNTO 0);
  SIGNAL LOOP_OUT_acc_10_nl : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL num_elements_num_elements_or_1_nl : STD_LOGIC;
  SIGNAL num_elements_num_elements_and_3_nl : STD_LOGIC;
  SIGNAL num_elements_mux_2_nl : STD_LOGIC;
  SIGNAL num_elements_mux1h_6_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL num_elements_num_elements_and_4_nl : STD_LOGIC;
  SIGNAL num_elements_num_elements_and_5_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL num_elements_mux_3_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL not_150_nl : STD_LOGIC;
  SIGNAL num_elements_mux1h_7_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL LOOP_OUT_mux_18_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_a : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_b : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_z_1 : STD_LOGIC_VECTOR (21 DOWNTO 0);

  SIGNAL LOOP_OUT_div_5_cmp_1_a : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_1_b : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_1_z_1 : STD_LOGIC_VECTOR (21 DOWNTO 0);

  SIGNAL LOOP_OUT_div_5_cmp_2_a : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_2_b : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_2_z_1 : STD_LOGIC_VECTOR (21 DOWNTO 0);

  SIGNAL LOOP_OUT_div_5_cmp_3_a : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_3_b : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_3_z_1 : STD_LOGIC_VECTOR (21 DOWNTO 0);

  SIGNAL LOOP_OUT_div_5_cmp_4_a : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_4_b : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LOOP_OUT_div_5_cmp_4_z_1 : STD_LOGIC_VECTOR (21 DOWNTO 0);

  SIGNAL operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_a : STD_LOGIC_VECTOR (24 DOWNTO
      0);
  SIGNAL operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_s : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_z : STD_LOGIC_VECTOR (31 DOWNTO
      0);

  SIGNAL LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (9 DOWNTO 0);
  SIGNAL LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (4 DOWNTO 0);

  SIGNAL LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (9 DOWNTO 0);
  SIGNAL LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (3 DOWNTO 0);

  COMPONENT leading_sign_22_0
    PORT (
      mantissa : IN STD_LOGIC_VECTOR(21 DOWNTO 0);
      rtn : OUT STD_LOGIC_VECTOR(4 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL leading_sign_22_0_rg_mantissa : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL leading_sign_22_0_rg_rtn : STD_LOGIC_VECTOR (4 DOWNTO 0);

  SIGNAL operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_a : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_s : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_z : STD_LOGIC_VECTOR (20 DOWNTO
      0);

  COMPONENT UNET_IP_batchnorm_relu_run_batch_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      arst_n : IN STD_LOGIC;
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z : IN STD_LOGIC_VECTOR
          (33 DOWNTO 0);
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg : OUT STD_LOGIC_VECTOR
          (27 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL UNET_IP_batchnorm_relu_run_batch_wait_dp_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z
      : STD_LOGIC_VECTOR (33 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_wait_dp_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg
      : STD_LOGIC_VECTOR (27 DOWNTO 0);

  COMPONENT UNET_IP_batchnorm_relu_run_batch_run_batch_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      arst_n : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (20 DOWNTO 0);
      main_C_0_tr0 : IN STD_LOGIC;
      LOOP_MEAN_C_0_tr0 : IN STD_LOGIC;
      LOOP_CH_C_5_tr0 : IN STD_LOGIC;
      LOOP_VAR_C_3_tr0 : IN STD_LOGIC;
      LOOP_OUT_C_0_tr0 : IN STD_LOGIC;
      LOOP_CH_C_12_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_fsm_output : STD_LOGIC_VECTOR
      (20 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_LOOP_CH_C_5_tr0 : STD_LOGIC;
  SIGNAL UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_LOOP_OUT_C_0_tr0 : STD_LOGIC;

  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION MUX1HOT_s_1_4_2(input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_12_3_2(input_2 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(11 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(11 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_12_4_2(input_3 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(11 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(11 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_18_5_2(input_4 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(17 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(17 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_18_6_2(input_5 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(17 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(17 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(17 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_6_3_2(input_2 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(5 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(5 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_7_3_2(input_2 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_s_1_2_2(input_0 : STD_LOGIC;
  input_1 : STD_LOGIC;
  sel : STD_LOGIC)
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_10_4_2(input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(1 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN "00" =>
          result := input_0;
        WHEN "01" =>
          result := input_1;
        WHEN "10" =>
          result := input_2;
        WHEN others =>
          result := input_3;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_11_2_2(input_0 : STD_LOGIC_VECTOR(10 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(10 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(10 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_12_2_2(input_0 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(11 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(11 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_13_2_2(input_0 : STD_LOGIC_VECTOR(12 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(12 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(12 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_14_2_2(input_0 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(13 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_15_2_2(input_0 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(14 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_28_2_2(input_0 : STD_LOGIC_VECTOR(27 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(27 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(27 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_2_2_2(input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_3_2_2(input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_5_2_2(input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_6_4_2(input_0 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(1 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(5 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN "00" =>
          result := input_0;
        WHEN "01" =>
          result := input_1;
        WHEN "10" =>
          result := input_2;
        WHEN others =>
          result := input_3;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_8_2_2(input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  input_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_output_triosy_obj_ld_cse,
      lz => input_triosy_lz
    );
  output_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_output_triosy_obj_ld_cse,
      lz => output_triosy_lz
    );
  LOOP_OUT_div_5_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 22,
      width_b => 15,
      signd => 1
      )
    PORT MAP(
      a => LOOP_OUT_div_5_cmp_a,
      b => LOOP_OUT_div_5_cmp_b,
      z => LOOP_OUT_div_5_cmp_z_1
    );
  LOOP_OUT_div_5_cmp_a <= LOOP_OUT_div_5_cmp_a_21_6 & STD_LOGIC_VECTOR'( "000000");
  LOOP_OUT_div_5_cmp_b <= STD_LOGIC_VECTOR(UNSIGNED'( "0") & UNSIGNED(LOOP_OUT_div_5_cmp_b_13_0));
  LOOP_OUT_div_5_cmp_z <= LOOP_OUT_div_5_cmp_z_1;

  LOOP_OUT_div_5_cmp_1 : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 22,
      width_b => 15,
      signd => 1
      )
    PORT MAP(
      a => LOOP_OUT_div_5_cmp_1_a,
      b => LOOP_OUT_div_5_cmp_1_b,
      z => LOOP_OUT_div_5_cmp_1_z_1
    );
  LOOP_OUT_div_5_cmp_1_a <= LOOP_OUT_div_5_cmp_1_a_21_6 & STD_LOGIC_VECTOR'( "000000");
  LOOP_OUT_div_5_cmp_1_b <= STD_LOGIC_VECTOR(UNSIGNED'( "0") & UNSIGNED(LOOP_OUT_div_5_cmp_1_b_13_0));
  LOOP_OUT_div_5_cmp_1_z <= LOOP_OUT_div_5_cmp_1_z_1;

  LOOP_OUT_div_5_cmp_2 : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 22,
      width_b => 15,
      signd => 1
      )
    PORT MAP(
      a => LOOP_OUT_div_5_cmp_2_a,
      b => LOOP_OUT_div_5_cmp_2_b,
      z => LOOP_OUT_div_5_cmp_2_z_1
    );
  LOOP_OUT_div_5_cmp_2_a <= LOOP_OUT_div_5_cmp_2_a_21_6 & STD_LOGIC_VECTOR'( "000000");
  LOOP_OUT_div_5_cmp_2_b <= STD_LOGIC_VECTOR(UNSIGNED'( "0") & UNSIGNED(LOOP_OUT_div_5_cmp_2_b_13_0));
  LOOP_OUT_div_5_cmp_2_z <= LOOP_OUT_div_5_cmp_2_z_1;

  LOOP_OUT_div_5_cmp_3 : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 22,
      width_b => 15,
      signd => 1
      )
    PORT MAP(
      a => LOOP_OUT_div_5_cmp_3_a,
      b => LOOP_OUT_div_5_cmp_3_b,
      z => LOOP_OUT_div_5_cmp_3_z_1
    );
  LOOP_OUT_div_5_cmp_3_a <= LOOP_OUT_div_5_cmp_3_a_21_6 & STD_LOGIC_VECTOR'( "000000");
  LOOP_OUT_div_5_cmp_3_b <= STD_LOGIC_VECTOR(UNSIGNED'( "0") & UNSIGNED(LOOP_OUT_div_5_cmp_3_b_13_0));
  LOOP_OUT_div_5_cmp_3_z <= LOOP_OUT_div_5_cmp_3_z_1;

  LOOP_OUT_div_5_cmp_4 : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 22,
      width_b => 15,
      signd => 1
      )
    PORT MAP(
      a => LOOP_OUT_div_5_cmp_4_a,
      b => LOOP_OUT_div_5_cmp_4_b,
      z => LOOP_OUT_div_5_cmp_4_z_1
    );
  LOOP_OUT_div_5_cmp_4_a <= LOOP_OUT_div_5_cmp_4_a_21_6 & STD_LOGIC_VECTOR'( "000000");
  LOOP_OUT_div_5_cmp_4_b <= STD_LOGIC_VECTOR(UNSIGNED'( "0") & UNSIGNED(LOOP_OUT_div_5_cmp_4_b_13_0));
  LOOP_OUT_div_5_cmp_4_z <= LOOP_OUT_div_5_cmp_4_z_1;

  operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg : mgc_hls.mgc_shift_comps_v5.mgc_shift_bl_v5
    GENERIC MAP(
      width_a => 25,
      signd_a => 0,
      width_s => 5,
      width_z => 32
      )
    PORT MAP(
      a => operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_a,
      s => operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_s,
      z => operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_z
    );
  operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_a <= (MUX_v_13_2_2(ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1,
      (ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_itm_35_11_1(24
      DOWNTO 12)), ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_2))
      & (MUX_v_11_2_2((LOOP_MEAN_mul_itm_1(10 DOWNTO 0)), (ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_itm_35_11_1(11
      DOWNTO 1)), ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_2))
      & ((ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_itm_35_11_1(0))
      AND ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_2);
  operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_s <= ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_2;
  operator_32_8_false_AC_TRN_AC_WRAP_lshift_itm <= operator_32_8_false_AC_TRN_AC_WRAP_lshift_rg_z;

  LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_rg : mgc_hls.unet_ip_batchnorm_relumgc_rom_11_736_5_1_pkg.UNET_IP_batchnorm_relumgc_rom_11_736_5_1
    PORT MAP(
      addr => LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_rg_addr,
      data_out => LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_rg_data_out
    );
  LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_rg_addr <= LOOP_OUT_acc_3_cse_sva_1;
  LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm <= LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_rg_data_out;

  LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_rg : mgc_hls.unet_ip_batchnorm_relumgc_rom_12_736_4_1_pkg.UNET_IP_batchnorm_relumgc_rom_12_736_4_1
    PORT MAP(
      addr => LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_rg_addr,
      data_out => LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_rg_data_out
    );
  LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_rg_addr <= LOOP_OUT_acc_3_cse_sva_1;
  LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm <= LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_rg_data_out;

  leading_sign_22_0_rg : leading_sign_22_0
    PORT MAP(
      mantissa => leading_sign_22_0_rg_mantissa,
      rtn => leading_sign_22_0_rg_rtn
    );
  leading_sign_22_0_rg_mantissa <= '0' & LOOP_CH_var_21_1_sva;
  leading_sign_22_0_c5945fbeaae02c4edab24e6eca5e07cb263f_1 <= leading_sign_22_0_rg_rtn;

  operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg : mgc_hls.mgc_shift_comps_v5.mgc_shift_l_v5
    GENERIC MAP(
      width_a => 21,
      signd_a => 0,
      width_s => 5,
      width_z => 21
      )
    PORT MAP(
      a => operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_a,
      s => operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_s,
      z => operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_z
    );
  operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_a <= LOOP_CH_var_21_1_sva;
  operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_s <= leading_sign_22_0_c5945fbeaae02c4edab24e6eca5e07cb263f_1;
  operator_22_0_false_AC_TRN_AC_WRAP_lshift_itm <= operator_22_0_false_AC_TRN_AC_WRAP_lshift_rg_z;

  UNET_IP_batchnorm_relu_run_batch_wait_dp_inst : UNET_IP_batchnorm_relu_run_batch_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      arst_n => arst_n,
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z => UNET_IP_batchnorm_relu_run_batch_wait_dp_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z,
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg => UNET_IP_batchnorm_relu_run_batch_wait_dp_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg
    );
  UNET_IP_batchnorm_relu_run_batch_wait_dp_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z
      <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z;
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg <= UNET_IP_batchnorm_relu_run_batch_wait_dp_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg;

  UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst : UNET_IP_batchnorm_relu_run_batch_run_batch_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      arst_n => arst_n,
      fsm_output => UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_fsm_output,
      main_C_0_tr0 => exit_LOOP_CH_sva_mx0,
      LOOP_MEAN_C_0_tr0 => nor_4_cse,
      LOOP_CH_C_5_tr0 => UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_LOOP_CH_C_5_tr0,
      LOOP_VAR_C_3_tr0 => LOOP_MEAN_stage_0,
      LOOP_OUT_C_0_tr0 => UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_LOOP_OUT_C_0_tr0,
      LOOP_CH_C_12_tr0 => exit_LOOP_CH_sva_mx0
    );
  fsm_output <= UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_fsm_output;
  UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_LOOP_CH_C_5_tr0 <= NOT LOOP_MEAN_stage_0;
  UNET_IP_batchnorm_relu_run_batch_run_batch_fsm_inst_LOOP_OUT_C_0_tr0 <= NOT(LOOP_OUT_stage_0
      OR LOOP_MEAN_stage_0_2 OR LOOP_MEAN_stage_0_3 OR LOOP_OUT_stage_0_4 OR LOOP_OUT_stage_0_5
      OR LOOP_OUT_stage_0_6 OR LOOP_OUT_stage_0_7 OR LOOP_OUT_stage_0_8 OR LOOP_OUT_stage_0_9
      OR LOOP_MEAN_stage_0);

  nor_4_cse <= NOT(LOOP_MEAN_stage_0_2 OR LOOP_MEAN_stage_0);
  or_123_ssc <= CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("0000"));
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a <= reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd
      & reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_1 & reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_2
      & STD_LOGIC_VECTOR'( "000000");
  LOOP_CH_c_or_cse <= (fsm_output(0)) OR (fsm_output(19));
  and_107_rgt <= and_dcpl_85 AND and_dcpl_94;
  and_108_rgt <= and_dcpl_87 AND and_dcpl_94;
  and_109_rgt <= and_dcpl_89 AND and_dcpl_94;
  and_110_rgt <= and_dcpl_91 AND and_dcpl_94;
  and_111_rgt <= and_dcpl_92 AND and_dcpl_94;
  nor_21_cse <= NOT((fsm_output(19)) OR (fsm_output(0)));
  or_159_cse <= (fsm_output(1)) OR (fsm_output(18));
  LOOP_CH_acc_2_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED('1' & (NOT channels)) +
      SIGNED'( "00000001"), 8));
  LOOP_CH_acc_3_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & LOOP_CH_c_sva_2)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED('1' & (NOT channels)), 8), 9) + UNSIGNED'(
      "000000001"), 9));
  exit_LOOP_CH_sva_mx0 <= MUX_s_1_2_2((NOT (LOOP_CH_acc_2_nl(7))), (NOT (LOOP_CH_acc_3_nl(8))),
      fsm_output(19));
  LOOP_CH_c_sva_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(LOOP_CH_c_sva(6
      DOWNTO 0)), 7), 8) + UNSIGNED'( "00000001"), 8));
  LOOP_VAR_mul_2_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED((LOOP_OUT_acc_5_itm_1(15))
      & LOOP_VAR_acc_4_cse_sva_14_12 & LOOP_VAR_acc_4_cse_sva_11_0) * SIGNED((LOOP_OUT_acc_5_itm_1(15))
      & LOOP_VAR_acc_4_cse_sva_14_12 & LOOP_VAR_acc_4_cse_sva_11_0)), 28));
  LOOP_CH_var_tmp_33_6_sva_mx0w1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LOOP_CH_var_tmp_33_6_sva)
      + CONV_UNSIGNED(SIGNED(LOOP_VAR_mul_2_nl), 28), 28));
  LOOP_CH_i_1_sva_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LOOP_CH_i_1_sva) +
      UNSIGNED'( "0000000000001"), 13));
  LOOP_VAR_acc_4_cse_sva_mx0w1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT LOOP_CH_mean_sva)), 15), 16) + CONV_SIGNED(CONV_SIGNED(SIGNED(input_rsci_q_d
      & STD_LOGIC_VECTOR'( "00")), 14), 16) + SIGNED'( "0000000000000001"), 16));
  LOOP_CH_mean_tmp_19_8_sva_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LOOP_VAR_acc_4_cse_sva_11_0)
      + UNSIGNED(input_rsci_q_d), 12));
  or_cse <= CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00"));
  ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1
      <= MUX_v_14_2_2(STD_LOGIC_VECTOR'("00000000000000"), ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_qr_sva_1_1,
      ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_3);
  LOOP_OUT_LOOP_OUT_acc_tmp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(LOOP_OUT_acc_imod_1(2),
      1), 1), 3) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(LOOP_OUT_acc_imod_1(1 DOWNTO
      0)), 2), 3), 3));
  LOOP_VAR_mul_4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(LOOP_CH_c_sva(6
      DOWNTO 0)) * UNSIGNED(num_elements_sva)), 15));
  ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_or_tmp
      <= CONV_SL_1_1(LOOP_CH_var_21_1_sva/=STD_LOGIC_VECTOR'("000000000000000000000"));
  LOOP_OUT_acc_imod_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(LOOP_OUT_acc_idiv_1(2),
      1), 1), 3) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(LOOP_OUT_acc_idiv_1(1 DOWNTO
      0)), 2), 3), 3));
  LOOP_OUT_acc_idiv_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LOOP_OUT_div_5cyc)
      + UNSIGNED'( "001"), 3));
  ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_nl
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED'( "1011010100001") *
      UNSIGNED(ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
      & (LOOP_MEAN_mul_itm_1(10 DOWNTO 0)))), 36));
  ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_itm_35_11_1
      <= ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_temp_mul_nl(35
      DOWNTO 11);
  LOOP_OUT_acc_3_cse_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(LOOP_CH_c_sva(6
      DOWNTO 0)), 7), 10) + UNSIGNED(offset), 10));
  LOOP_OUT_acc_10_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & LOOP_CH_i_1_sva)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(NOT num_elements_sva), 13), 14) + UNSIGNED'(
      "00000000000001"), 14));
  LOOP_OUT_acc_10_itm_13_1 <= LOOP_OUT_acc_10_nl(13);
  and_dcpl_45 <= LOOP_OUT_stage_0_4 AND (NOT exit_LOOP_OUT_sva_st_3);
  and_dcpl_46 <= and_dcpl_45 AND (NOT (LOOP_OUT_LOOP_OUT_acc_tmp(2)));
  and_dcpl_49 <= LOOP_OUT_stage_0_5 AND (NOT exit_LOOP_OUT_sva_st_4);
  and_dcpl_50 <= and_dcpl_49 AND (NOT (LOOP_OUT_div_5cyc_st_1(2)));
  or_dcpl_54 <= (NOT LOOP_OUT_stage_0_4) OR exit_LOOP_OUT_sva_st_3;
  or_dcpl_55 <= or_dcpl_54 OR (LOOP_OUT_LOOP_OUT_acc_tmp(2));
  or_dcpl_56 <= or_dcpl_55 OR CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("11"));
  or_dcpl_58 <= or_dcpl_55 OR CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("10"));
  or_dcpl_60 <= or_dcpl_55 OR CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("01"));
  and_dcpl_63 <= NOT(CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_65 <= NOT(CONV_SL_1_1(LOOP_OUT_div_5cyc_st_1(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")));
  or_dcpl_62 <= or_dcpl_55 OR or_cse;
  or_dcpl_64 <= or_dcpl_54 OR (NOT (LOOP_OUT_LOOP_OUT_acc_tmp(2))) OR or_cse;
  and_dcpl_77 <= LOOP_MEAN_stage_0_3 AND (NOT ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_3);
  and_dcpl_79 <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_84 <= NOT(CONV_SL_1_1(LOOP_OUT_div_5cyc_st_5(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_85 <= and_dcpl_84 AND (NOT (LOOP_OUT_div_5cyc_st_5(2)));
  and_dcpl_87 <= CONV_SL_1_1(LOOP_OUT_div_5cyc_st_5=STD_LOGIC_VECTOR'("001"));
  and_dcpl_89 <= CONV_SL_1_1(LOOP_OUT_div_5cyc_st_5=STD_LOGIC_VECTOR'("010"));
  and_dcpl_91 <= CONV_SL_1_1(LOOP_OUT_div_5cyc_st_5=STD_LOGIC_VECTOR'("011"));
  and_dcpl_92 <= and_dcpl_84 AND (LOOP_OUT_div_5cyc_st_5(2));
  and_dcpl_94 <= LOOP_OUT_stage_0_9 AND (NOT exit_LOOP_OUT_sva_st_8);
  LOOP_OUT_div_5_cmp_4_b_13_0_mx0c1 <= or_dcpl_56 AND and_dcpl_50 AND CONV_SL_1_1(LOOP_OUT_div_5cyc_st_1(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("11"));
  LOOP_OUT_div_5_cmp_3_b_13_0_mx0c1 <= or_dcpl_58 AND and_dcpl_50 AND CONV_SL_1_1(LOOP_OUT_div_5cyc_st_1(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  LOOP_OUT_div_5_cmp_2_b_13_0_mx0c1 <= or_dcpl_60 AND and_dcpl_50 AND CONV_SL_1_1(LOOP_OUT_div_5cyc_st_1(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  LOOP_OUT_div_5_cmp_1_b_13_0_mx0c1 <= or_dcpl_62 AND and_dcpl_50 AND and_dcpl_65;
  LOOP_OUT_div_5_cmp_b_13_0_mx0c1 <= or_dcpl_64 AND and_dcpl_49 AND (LOOP_OUT_div_5cyc_st_1(2))
      AND and_dcpl_65;
  input_rsci_radr_d <= MUX_v_15_2_2(z_out_1, LOOP_VAR_acc_1_itm, fsm_output(9));
  input_rsci_re_d_pff <= (fsm_output(9)) OR (LOOP_MEAN_stage_0_2 AND (NOT LOOP_OUT_stage_0_4)
      AND (fsm_output(1))) OR (LOOP_MEAN_stage_0_2 AND (NOT exit_LOOP_OUT_sva_st_1)
      AND (fsm_output(18)));
  output_rsci_d_d <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LOOP_OUT_slc_LOOP_OUT_mul_sdt_25_4_21_2_itm_1_11_0)
      + CONV_UNSIGNED(CONV_SIGNED(SIGNED(LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_2),
      4), 12), 12));
  output_rsci_wadr_d <= reg_LOOP_CH_idx_14_0_sva_8_ftd & reg_LOOP_CH_idx_14_0_sva_8_ftd_1;
  output_rsci_we_d_pff <= LOOP_MEAN_stage_0 AND (NOT exit_LOOP_OUT_sva_st_9) AND
      (fsm_output(18));
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_4_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_4_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
      ELSIF ( ((and_dcpl_46 AND CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11")))
          OR LOOP_OUT_div_5_cmp_4_b_13_0_mx0c1) = '1' ) THEN
        LOOP_OUT_div_5_cmp_4_b_13_0 <= MUX_v_14_2_2(ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1,
            mut_1_1_13_0, LOOP_OUT_div_5_cmp_4_b_13_0_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_4_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_4_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( or_dcpl_56 = '0' ) THEN
        LOOP_OUT_div_5_cmp_4_a_21_6 <= LOOP_OUT_acc_5_itm_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_3_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_3_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
      ELSIF ( ((and_dcpl_46 AND CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10")))
          OR LOOP_OUT_div_5_cmp_3_b_13_0_mx0c1) = '1' ) THEN
        LOOP_OUT_div_5_cmp_3_b_13_0 <= MUX_v_14_2_2(ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1,
            mut_1_1_13_0, LOOP_OUT_div_5_cmp_3_b_13_0_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_3_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_3_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( or_dcpl_58 = '0' ) THEN
        LOOP_OUT_div_5_cmp_3_a_21_6 <= LOOP_OUT_acc_5_itm_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_2_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_2_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
      ELSIF ( ((and_dcpl_46 AND CONV_SL_1_1(LOOP_OUT_LOOP_OUT_acc_tmp(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01")))
          OR LOOP_OUT_div_5_cmp_2_b_13_0_mx0c1) = '1' ) THEN
        LOOP_OUT_div_5_cmp_2_b_13_0 <= MUX_v_14_2_2(ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1,
            mut_1_1_13_0, LOOP_OUT_div_5_cmp_2_b_13_0_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_2_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_2_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( or_dcpl_60 = '0' ) THEN
        LOOP_OUT_div_5_cmp_2_a_21_6 <= LOOP_OUT_acc_5_itm_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_1_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_1_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
      ELSIF ( ((and_dcpl_46 AND and_dcpl_63) OR LOOP_OUT_div_5_cmp_1_b_13_0_mx0c1)
          = '1' ) THEN
        LOOP_OUT_div_5_cmp_1_b_13_0 <= MUX_v_14_2_2(ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1,
            mut_1_1_13_0, LOOP_OUT_div_5_cmp_1_b_13_0_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_1_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_1_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( or_dcpl_62 = '0' ) THEN
        LOOP_OUT_div_5_cmp_1_a_21_6 <= LOOP_OUT_acc_5_itm_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_b_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
      ELSIF ( ((and_dcpl_45 AND (LOOP_OUT_LOOP_OUT_acc_tmp(2)) AND and_dcpl_63) OR
          LOOP_OUT_div_5_cmp_b_13_0_mx0c1) = '1' ) THEN
        LOOP_OUT_div_5_cmp_b_13_0 <= MUX_v_14_2_2(ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1,
            mut_1_1_13_0, LOOP_OUT_div_5_cmp_b_13_0_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_5_cmp_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_5_cmp_a_21_6 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( or_dcpl_64 = '0' ) THEN
        LOOP_OUT_div_5_cmp_a_21_6 <= LOOP_OUT_acc_5_itm_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      reg_output_triosy_obj_ld_cse <= '0';
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b <= STD_LOGIC_VECTOR'(
          "0000000000000");
      reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd <= STD_LOGIC_VECTOR'(
          "00000000000000");
      reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_1 <= STD_LOGIC_VECTOR'(
          "000000000000");
      reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_2 <= STD_LOGIC_VECTOR'(
          "00");
      LOOP_MEAN_asn_6_itm_2 <= '0';
      LOOP_MEAN_stage_0_2 <= '0';
      LOOP_MEAN_stage_0_3 <= '0';
      LOOP_MEAN_mul_itm_1 <= STD_LOGIC_VECTOR'( "000000000000000");
      LOOP_MEAN_asn_3_itm_1 <= STD_LOGIC_VECTOR'( "0000000000000");
      LOOP_OUT_stage_0_4 <= '0';
      ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_3
          <= '0';
      LOOP_VAR_acc_4_cse_sva_14_12 <= STD_LOGIC_VECTOR'( "000");
      LOOP_VAR_acc_4_cse_sva_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
      LOOP_VAR_acc_1_itm <= STD_LOGIC_VECTOR'( "000000000000000");
      LOOP_OUT_slc_LOOP_OUT_mul_sdt_25_4_21_2_itm_1_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
      LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_2 <= STD_LOGIC_VECTOR'(
          "0000");
      reg_LOOP_CH_idx_14_0_sva_8_ftd <= STD_LOGIC_VECTOR'( "000");
      reg_LOOP_CH_idx_14_0_sva_8_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
      exit_LOOP_OUT_sva_st_9 <= '0';
      LOOP_OUT_div_5cyc_st_5 <= STD_LOGIC_VECTOR'( "000");
      exit_LOOP_OUT_sva_st_8 <= '0';
      LOOP_OUT_div_5cyc_st_4 <= STD_LOGIC_VECTOR'( "000");
      exit_LOOP_OUT_sva_st_7 <= '0';
      LOOP_OUT_div_5cyc_st_3 <= STD_LOGIC_VECTOR'( "000");
      exit_LOOP_OUT_sva_st_6 <= '0';
      LOOP_OUT_div_5cyc_st_2 <= STD_LOGIC_VECTOR'( "000");
      exit_LOOP_OUT_sva_st_5 <= '0';
      mut_1_1_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
      LOOP_OUT_div_5cyc_st_1 <= STD_LOGIC_VECTOR'( "000");
      exit_LOOP_OUT_sva_st_4 <= '0';
      LOOP_OUT_acc_5_itm_1 <= STD_LOGIC_VECTOR'( "0000000000000000");
      LOOP_OUT_div_5cyc <= STD_LOGIC_VECTOR'( "000");
      ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_qr_sva_1_1
          <= STD_LOGIC_VECTOR'( "00000000000000");
      exit_LOOP_OUT_sva_st_3 <= '0';
      exit_LOOP_OUT_sva_st_2 <= '0';
      LOOP_OUT_mul_itm_1 <= STD_LOGIC_VECTOR'( "000000000000000");
      exit_LOOP_OUT_sva_st_1 <= '0';
      LOOP_OUT_stage_0 <= '0';
      LOOP_OUT_stage_0_5 <= '0';
      LOOP_OUT_stage_0_6 <= '0';
      LOOP_OUT_stage_0_7 <= '0';
      LOOP_OUT_stage_0_8 <= '0';
      LOOP_OUT_stage_0_9 <= '0';
      LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm_1 <= STD_LOGIC_VECTOR'(
          "00000");
      ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
          <= STD_LOGIC_VECTOR'( "0000000000000");
      ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_2 <=
          '0';
      ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_2
          <= STD_LOGIC_VECTOR'( "00000");
      LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_1 <= STD_LOGIC_VECTOR'(
          "0000");
      LOOP_CH_idx_14_0_sva_7_14_12 <= STD_LOGIC_VECTOR'( "000");
      LOOP_CH_idx_14_0_sva_7_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
      ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_1_itm_1
          <= STD_LOGIC_VECTOR'( "0000000000");
      ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_slc_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_1_20_7_11_0_itm_1
          <= STD_LOGIC_VECTOR'( "000000000000");
      ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_itm_1
          <= STD_LOGIC_VECTOR'( "000000");
      ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_1
          <= '0';
      ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_1
          <= STD_LOGIC_VECTOR'( "00000");
      ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_1 <=
          '0';
      reg_LOOP_CH_idx_14_0_sva_6_ftd <= STD_LOGIC_VECTOR'( "000");
      reg_LOOP_CH_idx_14_0_sva_6_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
      LOOP_CH_idx_14_0_sva_5_14_12 <= STD_LOGIC_VECTOR'( "000");
      LOOP_CH_idx_14_0_sva_5_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
      reg_LOOP_CH_idx_14_0_sva_4_ftd <= STD_LOGIC_VECTOR'( "000");
      reg_LOOP_CH_idx_14_0_sva_4_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
      LOOP_CH_idx_14_0_sva_3_14_12 <= STD_LOGIC_VECTOR'( "000");
      LOOP_CH_idx_14_0_sva_3_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
      reg_LOOP_CH_idx_14_0_sva_2_ftd <= STD_LOGIC_VECTOR'( "000");
      reg_LOOP_CH_idx_14_0_sva_2_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_output_triosy_obj_ld_cse <= '0';
        operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b <= STD_LOGIC_VECTOR'(
            "0000000000000");
        reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd <= STD_LOGIC_VECTOR'(
            "00000000000000");
        reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_1 <= STD_LOGIC_VECTOR'(
            "000000000000");
        reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_2 <= STD_LOGIC_VECTOR'(
            "00");
        LOOP_MEAN_asn_6_itm_2 <= '0';
        LOOP_MEAN_stage_0_2 <= '0';
        LOOP_MEAN_stage_0_3 <= '0';
        LOOP_MEAN_mul_itm_1 <= STD_LOGIC_VECTOR'( "000000000000000");
        LOOP_MEAN_asn_3_itm_1 <= STD_LOGIC_VECTOR'( "0000000000000");
        LOOP_OUT_stage_0_4 <= '0';
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_3
            <= '0';
        LOOP_VAR_acc_4_cse_sva_14_12 <= STD_LOGIC_VECTOR'( "000");
        LOOP_VAR_acc_4_cse_sva_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
        LOOP_VAR_acc_1_itm <= STD_LOGIC_VECTOR'( "000000000000000");
        LOOP_OUT_slc_LOOP_OUT_mul_sdt_25_4_21_2_itm_1_11_0 <= STD_LOGIC_VECTOR'(
            "000000000000");
        LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_2 <= STD_LOGIC_VECTOR'(
            "0000");
        reg_LOOP_CH_idx_14_0_sva_8_ftd <= STD_LOGIC_VECTOR'( "000");
        reg_LOOP_CH_idx_14_0_sva_8_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
        exit_LOOP_OUT_sva_st_9 <= '0';
        LOOP_OUT_div_5cyc_st_5 <= STD_LOGIC_VECTOR'( "000");
        exit_LOOP_OUT_sva_st_8 <= '0';
        LOOP_OUT_div_5cyc_st_4 <= STD_LOGIC_VECTOR'( "000");
        exit_LOOP_OUT_sva_st_7 <= '0';
        LOOP_OUT_div_5cyc_st_3 <= STD_LOGIC_VECTOR'( "000");
        exit_LOOP_OUT_sva_st_6 <= '0';
        LOOP_OUT_div_5cyc_st_2 <= STD_LOGIC_VECTOR'( "000");
        exit_LOOP_OUT_sva_st_5 <= '0';
        mut_1_1_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
        LOOP_OUT_div_5cyc_st_1 <= STD_LOGIC_VECTOR'( "000");
        exit_LOOP_OUT_sva_st_4 <= '0';
        LOOP_OUT_acc_5_itm_1 <= STD_LOGIC_VECTOR'( "0000000000000000");
        LOOP_OUT_div_5cyc <= STD_LOGIC_VECTOR'( "000");
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_qr_sva_1_1
            <= STD_LOGIC_VECTOR'( "00000000000000");
        exit_LOOP_OUT_sva_st_3 <= '0';
        exit_LOOP_OUT_sva_st_2 <= '0';
        LOOP_OUT_mul_itm_1 <= STD_LOGIC_VECTOR'( "000000000000000");
        exit_LOOP_OUT_sva_st_1 <= '0';
        LOOP_OUT_stage_0 <= '0';
        LOOP_OUT_stage_0_5 <= '0';
        LOOP_OUT_stage_0_6 <= '0';
        LOOP_OUT_stage_0_7 <= '0';
        LOOP_OUT_stage_0_8 <= '0';
        LOOP_OUT_stage_0_9 <= '0';
        LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm_1 <= STD_LOGIC_VECTOR'(
            "00000");
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
            <= STD_LOGIC_VECTOR'( "0000000000000");
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_2 <=
            '0';
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_2
            <= STD_LOGIC_VECTOR'( "00000");
        LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_1 <= STD_LOGIC_VECTOR'(
            "0000");
        LOOP_CH_idx_14_0_sva_7_14_12 <= STD_LOGIC_VECTOR'( "000");
        LOOP_CH_idx_14_0_sva_7_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_1_itm_1
            <= STD_LOGIC_VECTOR'( "0000000000");
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_slc_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_1_20_7_11_0_itm_1
            <= STD_LOGIC_VECTOR'( "000000000000");
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_itm_1
            <= STD_LOGIC_VECTOR'( "000000");
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_1
            <= '0';
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_1
            <= STD_LOGIC_VECTOR'( "00000");
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_1 <=
            '0';
        reg_LOOP_CH_idx_14_0_sva_6_ftd <= STD_LOGIC_VECTOR'( "000");
        reg_LOOP_CH_idx_14_0_sva_6_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
        LOOP_CH_idx_14_0_sva_5_14_12 <= STD_LOGIC_VECTOR'( "000");
        LOOP_CH_idx_14_0_sva_5_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
        reg_LOOP_CH_idx_14_0_sva_4_ftd <= STD_LOGIC_VECTOR'( "000");
        reg_LOOP_CH_idx_14_0_sva_4_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
        LOOP_CH_idx_14_0_sva_3_14_12 <= STD_LOGIC_VECTOR'( "000");
        LOOP_CH_idx_14_0_sva_3_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
        reg_LOOP_CH_idx_14_0_sva_2_ftd <= STD_LOGIC_VECTOR'( "000");
        reg_LOOP_CH_idx_14_0_sva_2_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000");
      ELSE
        reg_output_triosy_obj_ld_cse <= NOT(nor_21_cse OR (NOT exit_LOOP_CH_sva_mx0));
        operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b <= num_elements_sva;
        reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_mux_nl
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (fsm_output(1)), 1),14))
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT or_123_ssc, 1),14));
        reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_1 <= MUX1HOT_v_12_4_2(LOOP_VAR_acc_4_cse_sva_11_0,
            LOOP_CH_mean_tmp_19_8_sva_2, (LOOP_CH_var_tmp_33_6_sva(13 DOWNTO 2)),
            (LOOP_CH_var_tmp_33_6_sva_mx0w1(13 DOWNTO 2)), STD_LOGIC_VECTOR'( operator_20_8_false_AC_TRN_AC_WRAP_13_false_or_1_nl
            & operator_20_8_false_AC_TRN_AC_WRAP_13_false_and_5_nl & operator_20_8_false_AC_TRN_AC_WRAP_13_false_or_nl
            & (fsm_output(11))));
        reg_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_ftd_2 <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_mux_1_nl
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (fsm_output(1)), 1),2))
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT or_123_ssc, 1),2));
        LOOP_MEAN_asn_6_itm_2 <= MUX_s_1_2_2(LOOP_OUT_stage_0_4, ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_1,
            fsm_output(18));
        LOOP_MEAN_stage_0_2 <= LOOP_MEAN_mux_3_nl AND (NOT((fsm_output(17)) OR (fsm_output(19))
            OR (fsm_output(0))));
        LOOP_MEAN_stage_0_3 <= LOOP_MEAN_stage_0_2 AND or_159_cse;
        LOOP_MEAN_mul_itm_1 <= z_out(14 DOWNTO 0);
        LOOP_MEAN_asn_3_itm_1 <= LOOP_CH_i_1_sva;
        LOOP_OUT_stage_0_4 <= LOOP_OUT_mux_nl AND or_159_cse;
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_3
            <= MUX_s_1_2_2(LOOP_OUT_stage_0_4, LOOP_MEAN_asn_6_itm_2, fsm_output(18));
        LOOP_VAR_acc_4_cse_sva_14_12 <= MUX_v_3_2_2((LOOP_VAR_acc_4_cse_sva_mx0w1(14
            DOWNTO 12)), (z_out_1(14 DOWNTO 12)), fsm_output(18));
        LOOP_VAR_acc_4_cse_sva_11_0 <= MUX1HOT_v_12_3_2(LOOP_CH_mean_tmp_LOOP_CH_mean_tmp_and_nl,
            (LOOP_VAR_acc_4_cse_sva_mx0w1(11 DOWNTO 0)), (z_out_1(11 DOWNTO 0)),
            STD_LOGIC_VECTOR'( or_164_nl & (fsm_output(10)) & (fsm_output(18))));
        LOOP_VAR_acc_1_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LOOP_VAR_mul_4)
            + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(LOOP_CH_i_1_sva), 13), 15), 15));
        LOOP_OUT_slc_LOOP_OUT_mul_sdt_25_4_21_2_itm_1_11_0 <= LOOP_OUT_LOOP_OUT_mul_nl(17
            DOWNTO 6);
        LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_2 <= LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_1;
        reg_LOOP_CH_idx_14_0_sva_8_ftd <= LOOP_CH_idx_14_0_sva_7_14_12;
        reg_LOOP_CH_idx_14_0_sva_8_ftd_1 <= LOOP_CH_idx_14_0_sva_7_11_0;
        exit_LOOP_OUT_sva_st_9 <= exit_LOOP_OUT_sva_st_8;
        LOOP_OUT_div_5cyc_st_5 <= LOOP_OUT_div_5cyc_st_4;
        exit_LOOP_OUT_sva_st_8 <= exit_LOOP_OUT_sva_st_7;
        LOOP_OUT_div_5cyc_st_4 <= LOOP_OUT_div_5cyc_st_3;
        exit_LOOP_OUT_sva_st_7 <= exit_LOOP_OUT_sva_st_6;
        LOOP_OUT_div_5cyc_st_3 <= LOOP_OUT_div_5cyc_st_2;
        exit_LOOP_OUT_sva_st_6 <= exit_LOOP_OUT_sva_st_5;
        LOOP_OUT_div_5cyc_st_2 <= LOOP_OUT_div_5cyc_st_1;
        exit_LOOP_OUT_sva_st_5 <= exit_LOOP_OUT_sva_st_4;
        mut_1_1_13_0 <= ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_and_tmp_1;
        LOOP_OUT_div_5cyc_st_1 <= LOOP_OUT_LOOP_OUT_acc_tmp;
        exit_LOOP_OUT_sva_st_4 <= exit_LOOP_OUT_sva_st_3;
        LOOP_OUT_acc_5_itm_1 <= LOOP_VAR_acc_4_cse_sva_mx0w1;
        LOOP_OUT_div_5cyc <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), LOOP_OUT_mux_10_nl,
            (fsm_output(18)));
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_qr_sva_1_1
            <= operator_32_8_false_AC_TRN_AC_WRAP_lshift_itm(31 DOWNTO 18);
        exit_LOOP_OUT_sva_st_3 <= exit_LOOP_OUT_sva_st_2;
        exit_LOOP_OUT_sva_st_2 <= exit_LOOP_OUT_sva_st_1;
        LOOP_OUT_mul_itm_1 <= LOOP_VAR_mul_4;
        exit_LOOP_OUT_sva_st_1 <= NOT LOOP_OUT_acc_10_itm_13_1;
        LOOP_OUT_stage_0 <= NOT((NOT(LOOP_OUT_stage_0 AND LOOP_OUT_acc_10_itm_13_1))
            AND (fsm_output(18)));
        LOOP_OUT_stage_0_5 <= LOOP_OUT_stage_0_4 AND (fsm_output(18));
        LOOP_OUT_stage_0_6 <= LOOP_OUT_stage_0_5 AND (fsm_output(18));
        LOOP_OUT_stage_0_7 <= LOOP_OUT_stage_0_6 AND (fsm_output(18));
        LOOP_OUT_stage_0_8 <= LOOP_OUT_stage_0_7 AND (fsm_output(18));
        LOOP_OUT_stage_0_9 <= LOOP_OUT_stage_0_8 AND (fsm_output(18));
        LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm_1 <= LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm;
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_24_12_sva_1
            <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out(19
            DOWNTO 11)), 9), 13) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED('1' & ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_1_itm_1
            & '1'), 12), 13), 13));
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_2 <=
            ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_1;
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_2
            <= ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_1;
        LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm_1 <= LOOP_OUT_read_rom_UNET_IP_beta_pretrain_rom_map_1_itm;
        LOOP_CH_idx_14_0_sva_7_14_12 <= reg_LOOP_CH_idx_14_0_sva_6_ftd;
        LOOP_CH_idx_14_0_sva_7_11_0 <= reg_LOOP_CH_idx_14_0_sva_6_ftd_1;
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_1_itm_1
            <= MUX_v_10_4_2(STD_LOGIC_VECTOR'( "0110101001"), STD_LOGIC_VECTOR'(
            "1001010100"), STD_LOGIC_VECTOR'( "1011101110"), STD_LOGIC_VECTOR'( "1101111100"),
            operator_22_0_false_AC_TRN_AC_WRAP_lshift_itm(20 DOWNTO 19));
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_slc_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_1_20_7_11_0_itm_1
            <= operator_22_0_false_AC_TRN_AC_WRAP_lshift_itm(18 DOWNTO 7);
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_itm_1
            <= MUX_v_6_4_2(STD_LOGIC_VECTOR'( "101011"), STD_LOGIC_VECTOR'( "011010"),
            STD_LOGIC_VECTOR'( "001110"), STD_LOGIC_VECTOR'( "000100"), operator_22_0_false_AC_TRN_AC_WRAP_lshift_itm(20
            DOWNTO 19));
        ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_or_itm_1
            <= ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_or_tmp;
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_and_itm_1
            <= MUX_v_5_2_2(STD_LOGIC_VECTOR'("00000"), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qif_acc_nl),
            5)), ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_or_tmp);
        ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qr_0_lpi_3_dfm_1 <=
            (NOT (leading_sign_22_0_c5945fbeaae02c4edab24e6eca5e07cb263f_1(0))) AND
            ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_or_tmp;
        reg_LOOP_CH_idx_14_0_sva_6_ftd <= LOOP_CH_idx_14_0_sva_5_14_12;
        reg_LOOP_CH_idx_14_0_sva_6_ftd_1 <= LOOP_CH_idx_14_0_sva_5_11_0;
        LOOP_CH_idx_14_0_sva_5_14_12 <= reg_LOOP_CH_idx_14_0_sva_4_ftd;
        LOOP_CH_idx_14_0_sva_5_11_0 <= reg_LOOP_CH_idx_14_0_sva_4_ftd_1;
        reg_LOOP_CH_idx_14_0_sva_4_ftd <= LOOP_CH_idx_14_0_sva_3_14_12;
        reg_LOOP_CH_idx_14_0_sva_4_ftd_1 <= LOOP_CH_idx_14_0_sva_3_11_0;
        LOOP_CH_idx_14_0_sva_3_14_12 <= reg_LOOP_CH_idx_14_0_sva_2_ftd;
        LOOP_CH_idx_14_0_sva_3_11_0 <= reg_LOOP_CH_idx_14_0_sva_2_ftd_1;
        reg_LOOP_CH_idx_14_0_sva_2_ftd <= LOOP_VAR_acc_4_cse_sva_14_12;
        reg_LOOP_CH_idx_14_0_sva_2_ftd_1 <= LOOP_VAR_acc_4_cse_sva_11_0;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      num_elements_sva <= STD_LOGIC_VECTOR'( "0000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        num_elements_sva <= STD_LOGIC_VECTOR'( "0000000000000");
      ELSIF ( ((fsm_output(20)) OR (fsm_output(0))) = '1' ) THEN
        num_elements_sva <= z_out(12 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_CH_c_sva <= STD_LOGIC_VECTOR'( "00000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_CH_c_sva <= STD_LOGIC_VECTOR'( "00000000");
      ELSIF ( LOOP_CH_c_or_cse = '1' ) THEN
        LOOP_CH_c_sva <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), LOOP_CH_c_sva_2,
            (fsm_output(19)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_OUT_div_tmp_duc_17_0 <= STD_LOGIC_VECTOR'( "000000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_OUT_div_tmp_duc_17_0 <= STD_LOGIC_VECTOR'( "000000000000000000");
      ELSIF ( ((fsm_output(18)) AND (and_107_rgt OR and_108_rgt OR and_109_rgt OR
          and_110_rgt OR and_111_rgt)) = '1' ) THEN
        LOOP_OUT_div_tmp_duc_17_0 <= MUX1HOT_v_18_5_2((LOOP_OUT_div_5_cmp_1_z(17
            DOWNTO 0)), (LOOP_OUT_div_5_cmp_2_z(17 DOWNTO 0)), (LOOP_OUT_div_5_cmp_3_z(17
            DOWNTO 0)), (LOOP_OUT_div_5_cmp_4_z(17 DOWNTO 0)), (LOOP_OUT_div_5_cmp_z(17
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_107_rgt & and_108_rgt & and_109_rgt
            & and_110_rgt & and_111_rgt));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_CH_var_tmp_33_6_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_CH_var_tmp_33_6_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000");
      ELSIF ( ((fsm_output(11)) OR LOOP_CH_c_or_cse) = '1' ) THEN
        LOOP_CH_var_tmp_33_6_sva <= MUX_v_28_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000"),
            LOOP_CH_var_tmp_33_6_sva_mx0w1, (fsm_output(11)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_MEAN_stage_0 <= '0';
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_MEAN_stage_0 <= '0';
      ELSIF ( (LOOP_CH_c_or_cse OR (fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(8))
          OR (fsm_output(17)) OR (fsm_output(18))) = '1' ) THEN
        LOOP_MEAN_stage_0 <= NOT((NOT(LOOP_MEAN_mux1h_8_nl OR LOOP_CH_c_or_cse))
            OR (fsm_output(17)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_CH_i_1_sva <= STD_LOGIC_VECTOR'( "0000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_CH_i_1_sva <= STD_LOGIC_VECTOR'( "0000000000000");
      ELSIF ( (NOT(CONV_SL_1_1(fsm_output(11 DOWNTO 9)/=STD_LOGIC_VECTOR'("000"))))
          = '1' ) THEN
        LOOP_CH_i_1_sva <= MUX_v_13_2_2(STD_LOGIC_VECTOR'("0000000000000"), LOOP_CH_i_1_sva_2,
            nor_29_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_CH_mean_sva <= STD_LOGIC_VECTOR'( "00000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_CH_mean_sva <= STD_LOGIC_VECTOR'( "00000000000000");
      ELSIF ( (NOT((NOT((fsm_output(5)) OR (fsm_output(6)) OR (fsm_output(20))))
          AND and_dcpl_79 AND (NOT((fsm_output(2)) OR (fsm_output(7)) OR (fsm_output(1))))
          AND nor_21_cse)) = '1' ) THEN
        LOOP_CH_mean_sva <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg(13
            DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      LOOP_CH_var_21_1_sva <= STD_LOGIC_VECTOR'( "000000000000000000000");
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LOOP_CH_var_21_1_sva <= STD_LOGIC_VECTOR'( "000000000000000000000");
      ELSIF ( (fsm_output(18)) = '0' ) THEN
        LOOP_CH_var_21_1_sva <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_oreg(27
            DOWNTO 7);
      END IF;
    END IF;
  END PROCESS;
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_mux_nl <= MUX_v_14_2_2((LOOP_CH_var_tmp_33_6_sva(27
      DOWNTO 14)), (LOOP_CH_var_tmp_33_6_sva_mx0w1(27 DOWNTO 14)), fsm_output(11));
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_or_1_nl <= ((NOT and_dcpl_77) AND (fsm_output(1)))
      OR or_123_ssc;
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_and_5_nl <= and_dcpl_77 AND (fsm_output(1));
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_or_nl <= (fsm_output(7)) OR (fsm_output(15))
      OR (fsm_output(14)) OR (fsm_output(13)) OR (fsm_output(12));
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_mux_1_nl <= MUX_v_2_2_2((LOOP_CH_var_tmp_33_6_sva(1
      DOWNTO 0)), (LOOP_CH_var_tmp_33_6_sva_mx0w1(1 DOWNTO 0)), fsm_output(11));
  LOOP_MEAN_mux_3_nl <= MUX_s_1_2_2(LOOP_MEAN_stage_0, LOOP_OUT_stage_0, fsm_output(18));
  LOOP_OUT_mux_nl <= MUX_s_1_2_2((NOT LOOP_OUT_acc_10_itm_13_1), LOOP_MEAN_stage_0_3,
      fsm_output(18));
  and_159_nl <= (nor_4_cse OR (NOT LOOP_MEAN_asn_6_itm_2)) AND and_dcpl_77 AND (fsm_output(1));
  LOOP_CH_mean_tmp_mux_1_nl <= MUX_v_12_2_2(LOOP_VAR_acc_4_cse_sva_11_0, LOOP_CH_mean_tmp_19_8_sva_2,
      and_159_nl);
  LOOP_CH_mean_tmp_nand_nl <= NOT(and_dcpl_79 AND CONV_SL_1_1(fsm_output(2 DOWNTO
      1)=STD_LOGIC_VECTOR'("00")));
  LOOP_CH_mean_tmp_LOOP_CH_mean_tmp_and_nl <= MUX_v_12_2_2(STD_LOGIC_VECTOR'("000000000000"),
      LOOP_CH_mean_tmp_mux_1_nl, LOOP_CH_mean_tmp_nand_nl);
  or_164_nl <= (fsm_output(4)) OR (fsm_output(3)) OR (fsm_output(2)) OR (fsm_output(1))
      OR (fsm_output(19)) OR (fsm_output(0));
  and_105_nl <= (CONV_SL_1_1(LOOP_OUT_div_5cyc_st_5(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")))
      AND (LOOP_OUT_div_5cyc_st_5(2));
  LOOP_OUT_mux1h_6_nl <= MUX1HOT_v_18_6_2((LOOP_OUT_div_5_cmp_1_z(17 DOWNTO 0)),
      (LOOP_OUT_div_5_cmp_2_z(17 DOWNTO 0)), (LOOP_OUT_div_5_cmp_3_z(17 DOWNTO 0)),
      (LOOP_OUT_div_5_cmp_4_z(17 DOWNTO 0)), (LOOP_OUT_div_5_cmp_z(17 DOWNTO 0)),
      LOOP_OUT_div_tmp_duc_17_0, STD_LOGIC_VECTOR'( and_dcpl_85 & and_dcpl_87 & and_dcpl_89
      & and_dcpl_91 & and_dcpl_92 & and_105_nl));
  LOOP_OUT_LOOP_OUT_mul_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(LOOP_OUT_read_rom_UNET_IP_gamma_pretrain_rom_map_1_itm_1),
      5), 6) * SIGNED(LOOP_OUT_mux1h_6_nl)), 18));
  LOOP_OUT_mux_10_nl <= MUX_v_3_2_2(LOOP_OUT_LOOP_OUT_acc_tmp, LOOP_OUT_div_5cyc,
      or_dcpl_54);
  ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_expret_qif_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & (NOT (leading_sign_22_0_c5945fbeaae02c4edab24e6eca5e07cb263f_1(4 DOWNTO 1))))
      + UNSIGNED'( "01001"), 5));
  LOOP_OUT_LOOP_OUT_and_nl <= LOOP_MEAN_stage_0 AND LOOP_OUT_acc_10_itm_13_1;
  LOOP_VAR_acc_7_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT num_elements_sva))
      + UNSIGNED'( "00000000000001"), 14));
  LOOP_VAR_acc_8_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & LOOP_CH_i_1_sva_2)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(NOT num_elements_sva), 13), 14) + UNSIGNED'(
      "00000000000001"), 14));
  LOOP_MEAN_mux1h_8_nl <= MUX1HOT_s_1_4_2(LOOP_OUT_LOOP_OUT_and_nl, (LOOP_VAR_acc_7_nl(13)),
      (NOT (LOOP_VAR_acc_8_nl(13))), LOOP_OUT_stage_0_9, STD_LOGIC_VECTOR'( (fsm_output(1))
      & (fsm_output(2)) & (fsm_output(8)) & (fsm_output(18))));
  nor_29_nl <= NOT((fsm_output(17)) OR (fsm_output(7)) OR LOOP_CH_c_or_cse);
  num_elements_num_elements_or_1_nl <= ((LOOP_CH_c_sva(7)) AND (NOT (fsm_output(0))))
      OR (fsm_output(18));
  num_elements_mux_2_nl <= MUX_s_1_2_2((width(6)), (LOOP_CH_c_sva(6)), fsm_output(1));
  num_elements_num_elements_and_3_nl <= num_elements_mux_2_nl AND (NOT (fsm_output(18)));
  num_elements_mux1h_6_nl <= MUX1HOT_v_6_3_2((width(5 DOWNTO 0)), (LOOP_CH_c_sva(5
      DOWNTO 0)), ac_math_ac_sqrt_pwl_AC_TRN_22_17_AC_TRN_AC_WRAP_14_8_AC_TRN_AC_WRAP_normalized_output_mux_itm_1,
      STD_LOGIC_VECTOR'( (fsm_output(0)) & (fsm_output(1)) & (fsm_output(18))));
  num_elements_num_elements_and_4_nl <= (num_elements_sva(12)) AND (NOT((fsm_output(0))
      OR (fsm_output(18))));
  num_elements_mux_3_nl <= MUX_v_5_2_2((num_elements_sva(11 DOWNTO 7)), (ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_slc_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_1_20_7_11_0_itm_1(11
      DOWNTO 7)), fsm_output(18));
  not_150_nl <= NOT (fsm_output(0));
  num_elements_num_elements_and_5_nl <= MUX_v_5_2_2(STD_LOGIC_VECTOR'("00000"), num_elements_mux_3_nl,
      not_150_nl);
  num_elements_mux1h_7_nl <= MUX1HOT_v_7_3_2(height, (num_elements_sva(6 DOWNTO 0)),
      (ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_slc_ac_math_ac_normalize_22_17_false_AC_TRN_AC_WRAP_normalized_fixed_temp_1_20_7_11_0_itm_1(6
      DOWNTO 0)), STD_LOGIC_VECTOR'( (fsm_output(0)) & (fsm_output(1)) & (fsm_output(18))));
  z_out <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(num_elements_num_elements_or_1_nl
      & num_elements_num_elements_and_3_nl & num_elements_mux1h_6_nl) * UNSIGNED(num_elements_num_elements_and_4_nl
      & num_elements_num_elements_and_5_nl & num_elements_mux1h_7_nl)), 20));
  LOOP_OUT_mux_18_nl <= MUX_v_15_2_2(LOOP_OUT_mul_itm_1, LOOP_MEAN_mul_itm_1, fsm_output(1));
  z_out_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LOOP_OUT_mux_18_nl) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(LOOP_MEAN_asn_3_itm_1),
      13), 15), 15));
END v3;

-- ------------------------------------------------------------------
--  Design Unit:    UNET_IP_batchnorm_relu
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY UNET_IP_batchnorm_relu IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    arst_n : IN STD_LOGIC;
    input_rsc_radr : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
    input_rsc_re : OUT STD_LOGIC;
    input_rsc_q : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    input_rsc_clken : OUT STD_LOGIC;
    input_triosy_lz : OUT STD_LOGIC;
    output_rsc_wadr : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
    output_rsc_d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    output_rsc_we : OUT STD_LOGIC;
    output_rsc_clken : OUT STD_LOGIC;
    output_triosy_lz : OUT STD_LOGIC;
    channels : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    height : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    width : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    offset : IN STD_LOGIC_VECTOR (9 DOWNTO 0)
  );
END UNET_IP_batchnorm_relu;

ARCHITECTURE v3 OF UNET_IP_batchnorm_relu IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';

  -- Interconnect Declarations
  SIGNAL input_rsci_q_d : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL input_rsci_radr_d : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL output_rsci_d_d : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL output_rsci_wadr_d : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a : STD_LOGIC_VECTOR
      (33 DOWNTO 0);
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b : STD_LOGIC_VECTOR
      (12 DOWNTO 0);
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z : STD_LOGIC_VECTOR
      (33 DOWNTO 0);
  SIGNAL input_rsci_re_d_iff : STD_LOGIC;
  SIGNAL output_rsci_we_d_iff : STD_LOGIC;

  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_1 : STD_LOGIC_VECTOR
      (33 DOWNTO 0);
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b_1 : STD_LOGIC_VECTOR
      (12 DOWNTO 0);
  SIGNAL operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_1 : STD_LOGIC_VECTOR
      (33 DOWNTO 0);

  COMPONENT UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_rport_en_1_15_12_32768_1_32768_12_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      q_d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (14 DOWNTO 0);
      re_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL input_rsci_q : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL input_rsci_radr : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL input_rsci_q_d_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL input_rsci_radr_d_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);

  COMPONENT UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_wport_en_2_15_12_32768_1_32768_12_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      wadr_d : IN STD_LOGIC_VECTOR (14 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL output_rsci_d : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL output_rsci_wadr : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL output_rsci_d_d_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL output_rsci_wadr_d_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);

  COMPONENT UNET_IP_batchnorm_relu_run_batch
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      arst_n : IN STD_LOGIC;
      input_triosy_lz : OUT STD_LOGIC;
      output_triosy_lz : OUT STD_LOGIC;
      channels : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
      height : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
      width : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
      offset : IN STD_LOGIC_VECTOR (9 DOWNTO 0);
      input_rsci_q_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      input_rsci_radr_d : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
      output_rsci_d_d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (14 DOWNTO 0);
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a : OUT STD_LOGIC_VECTOR
          (33 DOWNTO 0);
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b : OUT STD_LOGIC_VECTOR
          (12 DOWNTO 0);
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z : IN STD_LOGIC_VECTOR
          (33 DOWNTO 0);
      input_rsci_re_d_pff : OUT STD_LOGIC;
      output_rsci_we_d_pff : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_channels : STD_LOGIC_VECTOR (6 DOWNTO
      0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_height : STD_LOGIC_VECTOR (6 DOWNTO
      0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_width : STD_LOGIC_VECTOR (6 DOWNTO
      0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_offset : STD_LOGIC_VECTOR (9 DOWNTO
      0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_input_rsci_q_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_input_rsci_radr_d : STD_LOGIC_VECTOR
      (14 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_output_rsci_d_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_output_rsci_wadr_d : STD_LOGIC_VECTOR
      (14 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a
      : STD_LOGIC_VECTOR (33 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b
      : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z
      : STD_LOGIC_VECTOR (33 DOWNTO 0);

BEGIN
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 34,
      width_b => 13,
      signd => 0
      )
    PORT MAP(
      a => operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_1,
      b => operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b_1,
      z => operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_1
    );
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a_1 <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a;
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b_1 <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b;
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z_1;

  input_rsci : UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_rport_en_1_15_12_32768_1_32768_12_1_gen
    PORT MAP(
      clken => input_rsc_clken,
      q => input_rsci_q,
      re => input_rsc_re,
      radr => input_rsci_radr,
      clken_d => '1',
      q_d => input_rsci_q_d_1,
      radr_d => input_rsci_radr_d_1,
      re_d => input_rsci_re_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => input_rsci_re_d_iff
    );
  input_rsci_q <= input_rsc_q;
  input_rsc_radr <= input_rsci_radr;
  input_rsci_q_d <= input_rsci_q_d_1;
  input_rsci_radr_d_1 <= input_rsci_radr_d;

  output_rsci : UNET_IP_batchnorm_relu_Xilinx_RAMS_BLOCK_1R1W_RBW_wport_en_2_15_12_32768_1_32768_12_1_gen
    PORT MAP(
      clken => output_rsc_clken,
      we => output_rsc_we,
      d => output_rsci_d,
      wadr => output_rsci_wadr,
      clken_d => '1',
      d_d => output_rsci_d_d_1,
      wadr_d => output_rsci_wadr_d_1,
      we_d => output_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => output_rsci_we_d_iff
    );
  output_rsc_d <= output_rsci_d;
  output_rsc_wadr <= output_rsci_wadr;
  output_rsci_d_d_1 <= output_rsci_d_d;
  output_rsci_wadr_d_1 <= output_rsci_wadr_d;

  UNET_IP_batchnorm_relu_run_batch_inst : UNET_IP_batchnorm_relu_run_batch
    PORT MAP(
      clk => clk,
      rst => rst,
      arst_n => arst_n,
      input_triosy_lz => input_triosy_lz,
      output_triosy_lz => output_triosy_lz,
      channels => UNET_IP_batchnorm_relu_run_batch_inst_channels,
      height => UNET_IP_batchnorm_relu_run_batch_inst_height,
      width => UNET_IP_batchnorm_relu_run_batch_inst_width,
      offset => UNET_IP_batchnorm_relu_run_batch_inst_offset,
      input_rsci_q_d => UNET_IP_batchnorm_relu_run_batch_inst_input_rsci_q_d,
      input_rsci_radr_d => UNET_IP_batchnorm_relu_run_batch_inst_input_rsci_radr_d,
      output_rsci_d_d => UNET_IP_batchnorm_relu_run_batch_inst_output_rsci_d_d,
      output_rsci_wadr_d => UNET_IP_batchnorm_relu_run_batch_inst_output_rsci_wadr_d,
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a => UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a,
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b => UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b,
      operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z => UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z,
      input_rsci_re_d_pff => input_rsci_re_d_iff,
      output_rsci_we_d_pff => output_rsci_we_d_iff
    );
  UNET_IP_batchnorm_relu_run_batch_inst_channels <= channels;
  UNET_IP_batchnorm_relu_run_batch_inst_height <= height;
  UNET_IP_batchnorm_relu_run_batch_inst_width <= width;
  UNET_IP_batchnorm_relu_run_batch_inst_offset <= offset;
  UNET_IP_batchnorm_relu_run_batch_inst_input_rsci_q_d <= input_rsci_q_d;
  input_rsci_radr_d <= UNET_IP_batchnorm_relu_run_batch_inst_input_rsci_radr_d;
  output_rsci_d_d <= UNET_IP_batchnorm_relu_run_batch_inst_output_rsci_d_d;
  output_rsci_wadr_d <= UNET_IP_batchnorm_relu_run_batch_inst_output_rsci_wadr_d;
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a <= UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_a;
  operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b <= UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_b;
  UNET_IP_batchnorm_relu_run_batch_inst_operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z
      <= operator_20_8_false_AC_TRN_AC_WRAP_13_false_div_cmp_z;

END v3;



