-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2023.2/1059873 Production Release
--  HLS Date:       Mon Aug  7 10:54:31 PDT 2023
-- 
--  Generated by:   r12016@cad40
--  Generated date: Thu Jun 13 03:09:27 2024
-- ----------------------------------------------------------------------

-- 
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;

PACKAGE UNET_IP_batchnorm_relumgc_rom_12_736_4_1_pkg IS 
  COMPONENT UNET_IP_batchnorm_relumgc_rom_12_736_4_1
    PORT (
      addr : IN STD_LOGIC_VECTOR(9 DOWNTO 0);
      data_out : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
    );
  END COMPONENT;
END UNET_IP_batchnorm_relumgc_rom_12_736_4_1_pkg;

PACKAGE BODY UNET_IP_batchnorm_relumgc_rom_12_736_4_1_pkg IS
END UNET_IP_batchnorm_relumgc_rom_12_736_4_1_pkg;

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;

USE mgc_hls.UNET_IP_batchnorm_relumgc_rom_12_736_4_1_pkg.all;
LIBRARY std;
USE std.textio.all;
USE ieee.std_logic_textio.all;

ENTITY UNET_IP_batchnorm_relumgc_rom_12_736_4_1 IS
    PORT (
      addr : IN STD_LOGIC_VECTOR(9 DOWNTO 0);
      data_out : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
    );
END UNET_IP_batchnorm_relumgc_rom_12_736_4_1;

ARCHITECTURE v3 OF UNET_IP_batchnorm_relumgc_rom_12_736_4_1 IS
  -- Start of SIF_NL_VHDL::nhl_rom_body
  -- Constants for ROM dimensions
  CONSTANT n_width    : INTEGER := 4;
  CONSTANT n_size     : INTEGER := 736;
  CONSTANT n_addr_w   : INTEGER := 10;
  CONSTANT n_inreg    : INTEGER := 0;
  CONSTANT n_outreg   : INTEGER := 0;
  -- Define data types for ROM storage;
  SUBTYPE  word  IS std_logic_vector((n_width)-1 DOWNTO 0);
  TYPE     lookup_table IS ARRAY (0 to n_size-1) of word;

  SIGNAL mem : lookup_table := lookup_table'(
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("1111"),
    word'("1111"),
    word'("0000"),
    word'("0000"),
    word'("0100"),
    word'("0000"),
    word'("1111"),
    word'("1110"),
    word'("0101"),
    word'("0000"),
    word'("0100"),
    word'("1111")
  );
BEGIN

  -- Reading ROM
  PROCESS(addr)
    VARIABLE idx_addr : INTEGER;
  BEGIN
    idx_addr := conv_integer(unsigned(addr(9 DOWNTO 0)));
    IF idx_addr >= 0 AND idx_addr < 736 THEN
      data_out <= mem(idx_addr);
    ELSE
      data_out <= (OTHERS => '0');
    END IF;
  END PROCESS;

END v3;


