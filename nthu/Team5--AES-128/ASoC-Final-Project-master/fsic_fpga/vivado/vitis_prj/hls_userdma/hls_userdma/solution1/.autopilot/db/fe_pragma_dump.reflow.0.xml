<pragmas>
<pragma file="userdma.cpp" line="22" pragmaType="pipeline" parentfunction="streamtoparallelwithburst" off="0" ii="-1" rewind="0" style=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<32>(ap_int<32> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>& ap_int_base<32, false>::operator+=<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator==<32, false>(ap_int_base<32, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator<<32, false>(ap_int_base<32, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<32, false>::ssdm_int(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="userdma.cpp" line="50" pragmaType="pipeline" parentfunction="getinstream" off="0" ii="-1" rewind="0" style=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<2>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> > ap_range_ref<32, false>::operator,<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> > ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >::operator,<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<96, ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> > ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >::operator,<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<32>::ap_int<96, ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >(ap_concat_ref<96, ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> > const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<1>::ap_int<1>(ap_uint<1> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<32>::ap_int<32>(ap_uint<32> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)32, true>::minus operator-<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator<<34, true>(ap_int_base<34, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator==<1, false>(ap_int_base<1, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator==<34, true>(ap_int_base<34, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator!=<1, false>(ap_int_base<1, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<1, false>::operator!=<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, true>::minus operator-<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<34>::ap_int<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi34ELb1EEC2EDq34_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, true>::ap_int_base<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_id_ptr" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb1EEC2EDq1_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base<96, ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >(ap_concat_ref<96, ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> > const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<128, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="length" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="length" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<96, false>::ap_int_base<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >(ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> > const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<96, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="length" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >(ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> > const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi96ELb0EEC2EDq96_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<128, false>::ssdm_int(unsigned __int128)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<96, ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >::ap_concat_ref(ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >&, ap_range_ref<32, false>&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<64, ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >, 32, ap_range_ref<32, false> >::ap_concat_ref(ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >&, ap_range_ref<32, false>&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<32, ap_range_ref<32, false>, 32, ap_range_ref<32, false> >::ap_concat_ref(ap_range_ref<32, false>&, ap_range_ref<32, false>&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<32, false>::ap_range_ref(ap_int_base<32, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_data_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_keep_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_strb_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_user_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_last_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi2ELb0EEC2EDq2_j" off="0" region="0" recursive="0"/>
<pragma file="userdma.cpp" line="101" pragmaType="pipeline" parentfunction="paralleltostreamwithburst" off="0" ii="-1" rewind="0" style=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<1>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="userdma.cpp" line="129" pragmaType="pipeline" parentfunction="sendoutstream" off="0" ii="-1" rewind="0" style=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint<1>(ap_int<1> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base<1, true>(ap_int_base<1, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<int, 0>::stream()" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="userdma.cpp" line="170" pragmaType="dataflow" parentfunction="userdma" disable_start_propagation="0"/>
<pragma file="userdma.cpp" line="154" pragmaType="interface" parentfunction="userdma" mode="axis" port="inStreamTop" register="1" register_mode="both" name="" depth="-1"/>
<pragma file="userdma.cpp" line="155" pragmaType="interface" parentfunction="userdma" mode="m_axi" port="s2mbuf" bundle="gmem0" offset="slave" name="" depth="1024" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="16" latency="10" max_widen_bitwidth="-1" channel=""/>
<pragma file="userdma.cpp" line="156" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="s2m_buf_sts" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="157" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="s2m_len" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="158" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="s2m_enb_clrsts" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="159" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="s2mbuf" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="160" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="s2m_err" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="161" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="endianness" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="162" pragmaType="interface" parentfunction="userdma" mode="axis" port="outStreamTop" register="1" register_mode="both" name="" depth="-1"/>
<pragma file="userdma.cpp" line="163" pragmaType="interface" parentfunction="userdma" mode="m_axi" port="m2sbuf" bundle="gmem1" offset="slave" name="" depth="1024" num_read_outstanding="4" num_write_outstanding="-1" max_burst_read_length="16" max_burst_write_length="-1" latency="10" max_widen_bitwidth="-1" channel=""/>
<pragma file="userdma.cpp" line="164" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="m2s_buf_sts" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="165" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="m2s_len" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="166" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="m2s_enb_clrsts" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="167" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="m2sbuf" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="userdma.cpp" line="168" pragmaType="interface" parentfunction="userdma" mode="s_axilite" port="" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<data, 64>::stream()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="stream" parentfunction="hls::stream<data, 64>::stream()" depth="64" type="fifo" variable="this"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<int, 4>::stream()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="stream" parentfunction="hls::stream<int, 4>::stream()" depth="4" type="fifo" variable="this"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_dest_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>& operator+=<32, false>(ap_int_base<32, false>&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<data, 0>::stream()" off="0" region="0" recursive="0"/>
</pragmas>
