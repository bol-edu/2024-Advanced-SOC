// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module userdma_getinstream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        inStreamTop_TDATA,
        inStreamTop_TVALID,
        inStreamTop_TREADY,
        inStreamTop_TKEEP,
        inStreamTop_TSTRB,
        inStreamTop_TUSER,
        inStreamTop_TLAST,
        in_en_clrsts,
        in_s2m_len,
        s2m_err,
        s2m_err_ap_vld,
        inbuf_din,
        inbuf_num_data_valid,
        inbuf_fifo_cap,
        inbuf_full_n,
        inbuf_write,
        incount_din,
        incount_num_data_valid,
        incount_fifo_cap,
        incount_full_n,
        incount_write,
        endianness,
        s2m_len_c_din,
        s2m_len_c_num_data_valid,
        s2m_len_c_fifo_cap,
        s2m_len_c_full_n,
        s2m_len_c_write,
        s2m_enb_clrsts_c_din,
        s2m_enb_clrsts_c_num_data_valid,
        s2m_enb_clrsts_c_fifo_cap,
        s2m_enb_clrsts_c_full_n,
        s2m_enb_clrsts_c_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] inStreamTop_TDATA;
input   inStreamTop_TVALID;
output   inStreamTop_TREADY;
input  [3:0] inStreamTop_TKEEP;
input  [3:0] inStreamTop_TSTRB;
input  [6:0] inStreamTop_TUSER;
input  [0:0] inStreamTop_TLAST;
input  [0:0] in_en_clrsts;
input  [31:0] in_s2m_len;
output  [1:0] s2m_err;
output   s2m_err_ap_vld;
output  [32:0] inbuf_din;
input  [6:0] inbuf_num_data_valid;
input  [6:0] inbuf_fifo_cap;
input   inbuf_full_n;
output   inbuf_write;
output  [31:0] incount_din;
input  [2:0] incount_num_data_valid;
input  [2:0] incount_fifo_cap;
input   incount_full_n;
output   incount_write;
input  [0:0] endianness;
output  [31:0] s2m_len_c_din;
input  [2:0] s2m_len_c_num_data_valid;
input  [2:0] s2m_len_c_fifo_cap;
input   s2m_len_c_full_n;
output   s2m_len_c_write;
output  [0:0] s2m_enb_clrsts_c_din;
input  [2:0] s2m_enb_clrsts_c_num_data_valid;
input  [2:0] s2m_enb_clrsts_c_fifo_cap;
input   s2m_enb_clrsts_c_full_n;
output   s2m_enb_clrsts_c_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] s2m_err;
reg s2m_err_ap_vld;
reg inbuf_write;
reg incount_write;
reg s2m_len_c_write;
reg s2m_enb_clrsts_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] in_len;
reg    s2m_len_c_blk_n;
reg    s2m_enb_clrsts_c_blk_n;
reg    ap_block_state1;
reg   [31:0] in_len_load_reg_269;
wire   [31:0] add_ln49_fu_162_p2;
reg   [31:0] add_ln49_reg_274;
wire   [0:0] empty_fu_168_p2;
reg   [0:0] empty_reg_279;
wire   [0:0] icmp_ln62_fu_198_p2;
reg   [0:0] icmp_ln62_reg_284;
wire    ap_CS_fsm_state2;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_done;
wire   [0:0] icmp_ln65_fu_204_p2;
reg   [0:0] icmp_ln65_reg_289;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_idle;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_ready;
wire   [32:0] grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inbuf_din;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inbuf_write;
wire   [31:0] grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_incount_din;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_incount_write;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inStreamTop_TREADY;
wire   [0:0] grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_in_val_last_out;
wire    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_in_val_last_out_ap_vld;
reg    grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start_reg;
reg    ap_block_state1_ignore_call6;
wire   [31:0] umax_fu_174_p3;
wire   [0:0] in_en_clrsts_read_read_fu_98_p2;
reg   [31:0] ap_sig_allocacmp_in_len_load;
wire    ap_CS_fsm_state3;
wire   [1:0] select_ln65_fu_239_p3;
reg   [1:0] s2m_err_preg;
wire   [32:0] in_s2m_len_cast_fu_185_p1;
wire   [31:0] add_ln49_1_fu_179_p2;
wire   [32:0] sub_i_i53_fu_188_p2;
wire   [32:0] zext_ln62_fu_194_p1;
wire   [0:0] and_ln62_fu_219_p2;
wire   [0:0] xor_ln65_fu_228_p2;
wire   [0:0] and_ln65_fu_234_p2;
wire   [1:0] zext_ln62_1_fu_224_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    regslice_both_inStreamTop_V_data_V_U_apdone_blk;
wire   [31:0] inStreamTop_TDATA_int_regslice;
wire    inStreamTop_TVALID_int_regslice;
reg    inStreamTop_TREADY_int_regslice;
wire    regslice_both_inStreamTop_V_data_V_U_ack_in;
wire    regslice_both_inStreamTop_V_keep_V_U_apdone_blk;
wire   [3:0] inStreamTop_TKEEP_int_regslice;
wire    regslice_both_inStreamTop_V_keep_V_U_vld_out;
wire    regslice_both_inStreamTop_V_keep_V_U_ack_in;
wire    regslice_both_inStreamTop_V_strb_V_U_apdone_blk;
wire   [3:0] inStreamTop_TSTRB_int_regslice;
wire    regslice_both_inStreamTop_V_strb_V_U_vld_out;
wire    regslice_both_inStreamTop_V_strb_V_U_ack_in;
wire    regslice_both_inStreamTop_V_user_V_U_apdone_blk;
wire   [6:0] inStreamTop_TUSER_int_regslice;
wire    regslice_both_inStreamTop_V_user_V_U_vld_out;
wire    regslice_both_inStreamTop_V_user_V_U_ack_in;
wire    regslice_both_inStreamTop_V_last_V_U_apdone_blk;
wire   [0:0] inStreamTop_TLAST_int_regslice;
wire    regslice_both_inStreamTop_V_last_V_U_vld_out;
wire    regslice_both_inStreamTop_V_last_V_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 in_len = 32'd0;
#0 grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start_reg = 1'b0;
#0 s2m_err_preg = 2'd0;
end

userdma_getinstream_Pipeline_VITIS_LOOP_49_1 grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start),
    .ap_done(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_done),
    .ap_idle(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_idle),
    .ap_ready(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_ready),
    .inStreamTop_TVALID(inStreamTop_TVALID_int_regslice),
    .inbuf_din(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inbuf_din),
    .inbuf_num_data_valid(7'd0),
    .inbuf_fifo_cap(7'd0),
    .inbuf_full_n(inbuf_full_n),
    .inbuf_write(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inbuf_write),
    .incount_din(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_incount_din),
    .incount_num_data_valid(3'd0),
    .incount_fifo_cap(3'd0),
    .incount_full_n(incount_full_n),
    .incount_write(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_incount_write),
    .in_len_load(in_len_load_reg_269),
    .inStreamTop_TDATA(inStreamTop_TDATA_int_regslice),
    .inStreamTop_TREADY(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inStreamTop_TREADY),
    .inStreamTop_TKEEP(inStreamTop_TKEEP_int_regslice),
    .inStreamTop_TSTRB(inStreamTop_TSTRB_int_regslice),
    .inStreamTop_TUSER(inStreamTop_TUSER_int_regslice),
    .inStreamTop_TLAST(inStreamTop_TLAST_int_regslice),
    .endianness(endianness),
    .in_s2m_len(in_s2m_len),
    .in_val_last_out(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_in_val_last_out),
    .in_val_last_out_ap_vld(grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_in_val_last_out_ap_vld)
);

userdma_regslice_both #(
    .DataWidth( 32 ))
regslice_both_inStreamTop_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(inStreamTop_TDATA),
    .vld_in(inStreamTop_TVALID),
    .ack_in(regslice_both_inStreamTop_V_data_V_U_ack_in),
    .data_out(inStreamTop_TDATA_int_regslice),
    .vld_out(inStreamTop_TVALID_int_regslice),
    .ack_out(inStreamTop_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStreamTop_V_data_V_U_apdone_blk)
);

userdma_regslice_both #(
    .DataWidth( 4 ))
regslice_both_inStreamTop_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(inStreamTop_TKEEP),
    .vld_in(inStreamTop_TVALID),
    .ack_in(regslice_both_inStreamTop_V_keep_V_U_ack_in),
    .data_out(inStreamTop_TKEEP_int_regslice),
    .vld_out(regslice_both_inStreamTop_V_keep_V_U_vld_out),
    .ack_out(inStreamTop_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStreamTop_V_keep_V_U_apdone_blk)
);

userdma_regslice_both #(
    .DataWidth( 4 ))
regslice_both_inStreamTop_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(inStreamTop_TSTRB),
    .vld_in(inStreamTop_TVALID),
    .ack_in(regslice_both_inStreamTop_V_strb_V_U_ack_in),
    .data_out(inStreamTop_TSTRB_int_regslice),
    .vld_out(regslice_both_inStreamTop_V_strb_V_U_vld_out),
    .ack_out(inStreamTop_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStreamTop_V_strb_V_U_apdone_blk)
);

userdma_regslice_both #(
    .DataWidth( 7 ))
regslice_both_inStreamTop_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(inStreamTop_TUSER),
    .vld_in(inStreamTop_TVALID),
    .ack_in(regslice_both_inStreamTop_V_user_V_U_ack_in),
    .data_out(inStreamTop_TUSER_int_regslice),
    .vld_out(regslice_both_inStreamTop_V_user_V_U_vld_out),
    .ack_out(inStreamTop_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStreamTop_V_user_V_U_apdone_blk)
);

userdma_regslice_both #(
    .DataWidth( 1 ))
regslice_both_inStreamTop_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(inStreamTop_TLAST),
    .vld_in(inStreamTop_TVALID),
    .ack_in(regslice_both_inStreamTop_V_last_V_U_ack_in),
    .data_out(inStreamTop_TLAST_int_regslice),
    .vld_out(regslice_both_inStreamTop_V_last_V_U_vld_out),
    .ack_out(inStreamTop_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStreamTop_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state1_ignore_call6) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start_reg <= 1'b1;
        end else if ((grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_ready == 1'b1)) begin
            grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        s2m_err_preg <= 2'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            s2m_err_preg <= select_ln65_fu_239_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1) & (in_en_clrsts_read_read_fu_98_p2 == 1'd1))) begin
        in_len <= 32'd0;
    end else if (((grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_len <= umax_fu_174_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln49_reg_274 <= add_ln49_fu_162_p2;
        empty_reg_279 <= empty_fu_168_p2;
        in_len_load_reg_269 <= ap_sig_allocacmp_in_len_load;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln62_reg_284 <= icmp_ln62_fu_198_p2;
        icmp_ln65_reg_289 <= icmp_ln65_fu_204_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (in_en_clrsts_read_read_fu_98_p2 == 1'd1))) begin
        ap_sig_allocacmp_in_len_load = 32'd0;
    end else begin
        ap_sig_allocacmp_in_len_load = in_len;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        inStreamTop_TREADY_int_regslice = grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inStreamTop_TREADY;
    end else begin
        inStreamTop_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        inbuf_write = grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inbuf_write;
    end else begin
        inbuf_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        incount_write = grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_incount_write;
    end else begin
        incount_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s2m_enb_clrsts_c_blk_n = s2m_enb_clrsts_c_full_n;
    end else begin
        s2m_enb_clrsts_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        s2m_enb_clrsts_c_write = 1'b1;
    end else begin
        s2m_enb_clrsts_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        s2m_err = select_ln65_fu_239_p3;
    end else begin
        s2m_err = s2m_err_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        s2m_err_ap_vld = 1'b1;
    end else begin
        s2m_err_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s2m_len_c_blk_n = s2m_len_c_full_n;
    end else begin
        s2m_len_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        s2m_len_c_write = 1'b1;
    end else begin
        s2m_len_c_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln49_1_fu_179_p2 = ($signed(umax_fu_174_p3) + $signed(32'd4294967295));

assign add_ln49_fu_162_p2 = (ap_sig_allocacmp_in_len_load + 32'd1);

assign and_ln62_fu_219_p2 = (icmp_ln62_reg_284 & grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_in_val_last_out);

assign and_ln65_fu_234_p2 = (xor_ln65_fu_228_p2 & icmp_ln65_reg_289);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (s2m_enb_clrsts_c_full_n == 1'b0) | (s2m_len_c_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call6 = ((ap_start == 1'b0) | (s2m_enb_clrsts_c_full_n == 1'b0) | (s2m_len_c_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign empty_fu_168_p2 = ((add_ln49_fu_162_p2 < in_s2m_len) ? 1'b1 : 1'b0);

assign grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start = grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_ap_start_reg;

assign icmp_ln62_fu_198_p2 = (($signed(sub_i_i53_fu_188_p2) > $signed(zext_ln62_fu_194_p1)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_204_p2 = ((sub_i_i53_fu_188_p2 == zext_ln62_fu_194_p1) ? 1'b1 : 1'b0);

assign inStreamTop_TREADY = regslice_both_inStreamTop_V_data_V_U_ack_in;

assign in_en_clrsts_read_read_fu_98_p2 = in_en_clrsts;

assign in_s2m_len_cast_fu_185_p1 = in_s2m_len;

assign inbuf_din = grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_inbuf_din;

assign incount_din = grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_incount_din;

assign s2m_enb_clrsts_c_din = in_en_clrsts;

assign s2m_len_c_din = in_s2m_len;

assign select_ln65_fu_239_p3 = ((and_ln65_fu_234_p2[0:0] == 1'b1) ? 2'd2 : zext_ln62_1_fu_224_p1);

assign sub_i_i53_fu_188_p2 = ($signed(in_s2m_len_cast_fu_185_p1) + $signed(33'd8589934591));

assign umax_fu_174_p3 = ((empty_reg_279[0:0] == 1'b1) ? in_s2m_len : add_ln49_reg_274);

assign xor_ln65_fu_228_p2 = (grp_getinstream_Pipeline_VITIS_LOOP_49_1_fu_127_in_val_last_out ^ 1'd1);

assign zext_ln62_1_fu_224_p1 = and_ln62_fu_219_p2;

assign zext_ln62_fu_194_p1 = add_ln49_1_fu_179_p2;

endmodule //userdma_getinstream
