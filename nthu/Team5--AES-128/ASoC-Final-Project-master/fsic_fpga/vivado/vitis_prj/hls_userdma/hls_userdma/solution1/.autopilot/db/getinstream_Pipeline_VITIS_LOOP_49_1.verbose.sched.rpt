

================================================================
== Vitis HLS Report for 'getinstream_Pipeline_VITIS_LOOP_49_1'
================================================================
* Date:           Sat Jun 15 17:11:13 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        hls_userdma
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.963 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_49_1  |        ?|        ?|         2|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%count = alloca i32 1" [userdma.cpp:40]   --->   Operation 5 'alloca' 'count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, i1 0, i1 0, void @empty_14"   --->   Operation 7 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, void @empty_6, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i33 %inbuf, void @empty, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %incount, void @empty, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%in_s2m_len_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_s2m_len"   --->   Operation 11 'read' 'in_s2m_len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%endianness_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %endianness"   --->   Operation 12 'read' 'endianness_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%in_len_load_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_len_load"   --->   Operation 13 'read' 'in_len_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %in_len_load_read, i32 %empty"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 0, i32 %count" [userdma.cpp:40]   --->   Operation 15 'store' 'store_ln40' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %do.body_ifconv"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.96>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%count_4 = load i32 %count" [userdma.cpp:68]   --->   Operation 17 'load' 'count_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty" [userdma.cpp:69]   --->   Operation 18 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%specpipeline_ln50 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_2" [userdma.cpp:50]   --->   Operation 19 'specpipeline' 'specpipeline_ln50' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%specloopname_ln49 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [userdma.cpp:49]   --->   Operation 20 'specloopname' 'specloopname_ln49' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.00ns)   --->   "%empty_55 = read i48 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i7P0A.i1P0A, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V" [userdma.cpp:51]   --->   Operation 21 'read' 'empty_55' <Predicate = true> <Delay = 1.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%in_val_data = extractvalue i48 %empty_55" [userdma.cpp:51]   --->   Operation 22 'extractvalue' 'in_val_data' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%in_val_last = extractvalue i48 %empty_55" [userdma.cpp:51]   --->   Operation 23 'extractvalue' 'in_val_last' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %in_val_data, i32 24, i32 31" [userdma.cpp:54]   --->   Operation 24 'partselect' 'tmp1' <Predicate = (endianness_read)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %in_val_data, i32 16, i32 23" [userdma.cpp:54]   --->   Operation 25 'partselect' 'tmp_3' <Predicate = (endianness_read)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %in_val_data, i32 8, i32 15" [userdma.cpp:54]   --->   Operation 26 'partselect' 'tmp_s' <Predicate = (endianness_read)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i32 %in_val_data" [userdma.cpp:54]   --->   Operation 27 'trunc' 'trunc_ln54' <Predicate = (endianness_read)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_5 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i1.i8.i8.i8.i8, i1 %in_val_last, i8 %trunc_ln54, i8 %tmp_s, i8 %tmp_3, i8 %tmp1" [userdma.cpp:51]   --->   Operation 28 'bitconcatenate' 'tmp_5' <Predicate = (endianness_read)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_6 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i1.i32, i1 %in_val_last, i32 %in_val_data" [userdma.cpp:51]   --->   Operation 29 'bitconcatenate' 'tmp_6' <Predicate = (!endianness_read)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.80ns)   --->   "%select_ln39 = select i1 %endianness_read, i33 %tmp_5, i33 %tmp_6" [userdma.cpp:39]   --->   Operation 30 'select' 'select_ln39' <Predicate = true> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (3.56ns)   --->   "%write_ln58 = write void @_ssdm_op_Write.ap_fifo.volatile.i33P0A, i33 %inbuf, i33 %select_ln39" [userdma.cpp:58]   --->   Operation 31 'write' 'write_ln58' <Predicate = true> <Delay = 3.56> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.56> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 33> <Depth = 64> <FIFO>
ST_2 : Operation 32 [1/1] (2.55ns)   --->   "%count_5 = add i32 %count_4, i32 1" [userdma.cpp:68]   --->   Operation 32 'add' 'count_5' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (2.55ns)   --->   "%add_ln69 = add i32 %p_load, i32 1" [userdma.cpp:69]   --->   Operation 33 'add' 'add_ln69' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp = partselect i28 @_ssdm_op_PartSelect.i28.i32.i32.i32, i32 %count_5, i32 4, i32 31" [userdma.cpp:71]   --->   Operation 34 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (2.43ns)   --->   "%icmp_ln71 = icmp_sgt  i28 %tmp, i28 0" [userdma.cpp:71]   --->   Operation 35 'icmp' 'icmp_ln71' <Predicate = true> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.97ns)   --->   "%or_ln71 = or i1 %in_val_last, i1 %icmp_ln71" [userdma.cpp:71]   --->   Operation 36 'or' 'or_ln71' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln71 = br i1 %or_ln71, void %do.body_ifconv.do.cond_crit_edge, void %if.then41" [userdma.cpp:71]   --->   Operation 37 'br' 'br_ln71' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (2.55ns)   --->   "%icmp_ln75 = icmp_ult  i32 %add_ln69, i32 %in_s2m_len_read" [userdma.cpp:75]   --->   Operation 38 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (1.58ns)   --->   "%store_ln69 = store i32 %add_ln69, i32 %empty" [userdma.cpp:69]   --->   Operation 39 'store' 'store_ln69' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %icmp_ln75, void %do.end.exitStub, void %do.body_ifconv" [userdma.cpp:75]   --->   Operation 40 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.63>
ST_3 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 %count_5, i32 %count" [userdma.cpp:40]   --->   Operation 41 'store' 'store_ln40' <Predicate = (!or_ln71)> <Delay = 1.58>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln71 = br void %do.cond" [userdma.cpp:71]   --->   Operation 42 'br' 'br_ln71' <Predicate = (!or_ln71)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (3.63ns)   --->   "%write_ln72 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %incount, i32 %count_5" [userdma.cpp:72]   --->   Operation 43 'write' 'write_ln72' <Predicate = (or_ln71)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_3 : Operation 44 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 0, i32 %count" [userdma.cpp:40]   --->   Operation 44 'store' 'store_ln40' <Predicate = (or_ln71)> <Delay = 1.58>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln74 = br void %do.cond" [userdma.cpp:74]   --->   Operation 45 'br' 'br_ln74' <Predicate = (or_ln71)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%write_ln51 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %in_val_last_out, i1 %in_val_last" [userdma.cpp:51]   --->   Operation 46 'write' 'write_ln51' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 47 'ret' 'ret_ln0' <Predicate = (!icmp_ln75)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation 32 bit ('empty') [13]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of variable 'in_len_load_read' on local variable 'empty' [21]  (1.588 ns)

 <State 2>: 5.963ns
The critical path consists of the following:
	'load' operation 32 bit ('count', userdma.cpp:68) on local variable 'count', userdma.cpp:40 [25]  (0.000 ns)
	'add' operation 32 bit ('count', userdma.cpp:68) [40]  (2.552 ns)
	'icmp' operation 1 bit ('icmp_ln71', userdma.cpp:71) [43]  (2.433 ns)
	'or' operation 1 bit ('or_ln71', userdma.cpp:71) [44]  (0.978 ns)

 <State 3>: 3.634ns
The critical path consists of the following:
	fifo write operation ('write_ln72', userdma.cpp:72) on port 'incount' (userdma.cpp:72) [50]  (3.634 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
