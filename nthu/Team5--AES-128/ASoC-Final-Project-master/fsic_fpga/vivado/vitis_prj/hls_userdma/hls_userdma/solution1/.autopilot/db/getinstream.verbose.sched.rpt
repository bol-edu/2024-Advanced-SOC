

================================================================
== Vitis HLS Report for 'getinstream'
================================================================
* Date:           Sat Jun 15 17:11:13 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        hls_userdma
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.955 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.95>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%endianness_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %endianness"   --->   Operation 4 'read' 'endianness_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%in_s2m_len_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_s2m_len"   --->   Operation 5 'read' 'in_s2m_len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%in_en_clrsts_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %in_en_clrsts"   --->   Operation 6 'read' 'in_en_clrsts_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%in_val_last_loc = alloca i64 1"   --->   Operation 7 'alloca' 'in_val_last_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %s2m_enb_clrsts_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (3.63ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i1P0A, i1 %s2m_enb_clrsts_c, i1 %in_en_clrsts_read"   --->   Operation 9 'write' 'write_ln0' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %s2m_len_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (3.63ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i32P0A, i32 %s2m_len_c, i32 %in_s2m_len_read"   --->   Operation 11 'write' 'write_ln0' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, i1 0, i1 0, void @empty_14"   --->   Operation 12 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %incount, void @empty, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i33 %inbuf, void @empty, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %inStreamTop_V_last_V, i7 %inStreamTop_V_user_V, i4 %inStreamTop_V_strb_V, i4 %inStreamTop_V_keep_V, i32 %inStreamTop_V_data_V, void @empty_6, i32 1, i32 1, void @empty_17, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln44 = br i1 %in_en_clrsts_read, void %VITIS_LOOP_49_1, void %if.then" [userdma.cpp:44]   --->   Operation 16 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln45 = store i32 0, i32 %in_len" [userdma.cpp:45]   --->   Operation 17 'store' 'store_ln45' <Predicate = (in_en_clrsts_read)> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln47 = br void %VITIS_LOOP_49_1" [userdma.cpp:47]   --->   Operation 18 'br' 'br_ln47' <Predicate = (in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%in_len_load = load i32 %in_len" [userdma.cpp:69]   --->   Operation 19 'load' 'in_len_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (2.55ns)   --->   "%add_ln49 = add i32 %in_len_load, i32 1" [userdma.cpp:49]   --->   Operation 20 'add' 'add_ln49' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (2.55ns)   --->   "%empty = icmp_ult  i32 %add_ln49, i32 %in_s2m_len_read" [userdma.cpp:49]   --->   Operation 21 'icmp' 'empty' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty_56 = wait i32 @_ssdm_op_Wait"   --->   Operation 22 'wait' 'empty_56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [2/2] (5.36ns)   --->   "%call_ln69 = call void @getinstream_Pipeline_VITIS_LOOP_49_1, i32 %in_len_load, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, i1 %endianness_read, i33 %inbuf, i32 %in_s2m_len_read, i32 %incount, i1 %in_val_last_loc" [userdma.cpp:69]   --->   Operation 23 'call' 'call_ln69' <Predicate = true> <Delay = 5.36> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 5.84>
ST_2 : Operation 24 [1/1] (0.69ns)   --->   "%umax = select i1 %empty, i32 %in_s2m_len_read, i32 %add_ln49" [userdma.cpp:49]   --->   Operation 24 'select' 'umax' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (2.55ns)   --->   "%add_ln49_1 = add i32 %umax, i32 4294967295" [userdma.cpp:49]   --->   Operation 25 'add' 'add_ln49_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/2] (0.00ns)   --->   "%call_ln69 = call void @getinstream_Pipeline_VITIS_LOOP_49_1, i32 %in_len_load, i32 %inStreamTop_V_data_V, i4 %inStreamTop_V_keep_V, i4 %inStreamTop_V_strb_V, i7 %inStreamTop_V_user_V, i1 %inStreamTop_V_last_V, i1 %endianness_read, i33 %inbuf, i32 %in_s2m_len_read, i32 %incount, i1 %in_val_last_loc" [userdma.cpp:69]   --->   Operation 26 'call' 'call_ln69' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%in_s2m_len_cast = zext i32 %in_s2m_len_read"   --->   Operation 27 'zext' 'in_s2m_len_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (2.55ns)   --->   "%sub_i_i53 = add i33 %in_s2m_len_cast, i33 8589934591"   --->   Operation 28 'add' 'sub_i_i53' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i32 %add_ln49_1" [userdma.cpp:62]   --->   Operation 29 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (2.59ns)   --->   "%icmp_ln62 = icmp_sgt  i33 %sub_i_i53, i33 %zext_ln62" [userdma.cpp:62]   --->   Operation 30 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 2.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (2.59ns)   --->   "%icmp_ln65 = icmp_eq  i33 %sub_i_i53, i33 %zext_ln62" [userdma.cpp:65]   --->   Operation 31 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 2.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln69 = store i32 %umax, i32 %in_len" [userdma.cpp:69]   --->   Operation 32 'store' 'store_ln69' <Predicate = true> <Delay = 1.58>

State 3 <SV = 2> <Delay = 0.99>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%in_val_last_loc_load = load i1 %in_val_last_loc"   --->   Operation 33 'load' 'in_val_last_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%and_ln62 = and i1 %in_val_last_loc_load, i1 %icmp_ln62" [userdma.cpp:62]   --->   Operation 34 'and' 'and_ln62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%zext_ln62_1 = zext i1 %and_ln62" [userdma.cpp:62]   --->   Operation 35 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%xor_ln65 = xor i1 %in_val_last_loc_load, i1 1" [userdma.cpp:65]   --->   Operation 36 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%and_ln65 = and i1 %icmp_ln65, i1 %xor_ln65" [userdma.cpp:65]   --->   Operation 37 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln65 = select i1 %and_ln65, i2 2, i2 %zext_ln62_1" [userdma.cpp:65]   --->   Operation 38 'select' 'select_ln65' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%write_ln60 = write void @_ssdm_op_Write.ap_auto.i2P0A, i2 %s2m_err, i2 %select_ln65" [userdma.cpp:60]   --->   Operation 39 'write' 'write_ln60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%ret_ln77 = ret" [userdma.cpp:77]   --->   Operation 40 'ret' 'ret_ln77' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.955ns
The critical path consists of the following:
	wire read operation ('in_en_clrsts_read') on port 'in_en_clrsts' [17]  (0.000 ns)
	'store' operation 0 bit ('store_ln45', userdma.cpp:45) of constant 0 on static variable 'in_len' [29]  (1.588 ns)
	'load' operation 32 bit ('in_len_load', userdma.cpp:69) on static variable 'in_len' [32]  (0.000 ns)
	'call' operation 0 bit ('call_ln69', userdma.cpp:69) to 'getinstream_Pipeline_VITIS_LOOP_49_1' [38]  (5.367 ns)

 <State 2>: 5.843ns
The critical path consists of the following:
	'select' operation 32 bit ('umax', userdma.cpp:49) [35]  (0.698 ns)
	'add' operation 32 bit ('add_ln49_1', userdma.cpp:49) [36]  (2.552 ns)
	'icmp' operation 1 bit ('icmp_ln62', userdma.cpp:62) [43]  (2.593 ns)

 <State 3>: 0.993ns
The critical path consists of the following:
	'load' operation 1 bit ('in_val_last_loc_load') on local variable 'in_val_last_loc' [39]  (0.000 ns)
	'and' operation 1 bit ('and_ln62', userdma.cpp:62) [44]  (0.000 ns)
	'select' operation 2 bit ('select_ln65', userdma.cpp:65) [49]  (0.993 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
