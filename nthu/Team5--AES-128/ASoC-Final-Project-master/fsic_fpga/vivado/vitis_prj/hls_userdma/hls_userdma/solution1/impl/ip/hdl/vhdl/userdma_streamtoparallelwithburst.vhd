-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity userdma_streamtoparallelwithburst is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inbuf_dout : IN STD_LOGIC_VECTOR (32 downto 0);
    inbuf_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    inbuf_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    inbuf_empty_n : IN STD_LOGIC;
    inbuf_read : OUT STD_LOGIC;
    incount_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    incount_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    incount_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    incount_empty_n : IN STD_LOGIC;
    incount_read : OUT STD_LOGIC;
    in_en_clrsts_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_en_clrsts_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    in_en_clrsts_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    in_en_clrsts_empty_n : IN STD_LOGIC;
    in_en_clrsts_read : OUT STD_LOGIC;
    s2m_buf_sts : OUT STD_LOGIC_VECTOR (0 downto 0);
    s2m_buf_sts_ap_vld : OUT STD_LOGIC;
    in_s2m_len_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_s2m_len_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    in_s2m_len_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    in_s2m_len_empty_n : IN STD_LOGIC;
    in_s2m_len_read : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out_memory_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    out_memory_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    out_memory_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    out_memory_empty_n : IN STD_LOGIC;
    out_memory_read : OUT STD_LOGIC );
end;


architecture behav of userdma_streamtoparallelwithburst is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal final_s2m_len : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal out_sts : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal incount_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in_en_clrsts_blk_n : STD_LOGIC;
    signal in_s2m_len_blk_n : STD_LOGIC;
    signal gmem0_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem0_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal out_memory_blk_n : STD_LOGIC;
    signal out_memory_read_reg_292 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal in_s2m_len_read_reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln18_fu_171_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln18_reg_313 : STD_LOGIC_VECTOR (61 downto 0);
    signal count_reg_321 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_1_reg_328 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_fu_225_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_reg_334 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_done : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_idle : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_ready : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_inbuf_read : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_BREADY : STD_LOGIC;
    signal sub_ln16_fu_158_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_phi_mux_phi_ln21_phi_fu_133_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal in_en_clrsts_read_read_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sext_ln21_1_fu_233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_fu_243_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln29_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_out_sts_load : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_fu_88 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal add_ln26_fu_250_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s2m_buf_sts_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal icmp_ln34_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln16_fu_154_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln8_fu_183_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln21_fu_187_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_fu_193_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln21_fu_197_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln_fu_202_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_1_fu_210_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln21_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln8_fu_183_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln21_fu_247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component userdma_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inbuf_dout : IN STD_LOGIC_VECTOR (32 downto 0);
        inbuf_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        inbuf_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        inbuf_empty_n : IN STD_LOGIC;
        inbuf_read : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        count : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln21_1 : IN STD_LOGIC_VECTOR (61 downto 0) );
    end component;



begin
    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140 : component userdma_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start,
        ap_done => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_done,
        ap_idle => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_idle,
        ap_ready => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_ready,
        inbuf_dout => inbuf_dout,
        inbuf_num_data_valid => ap_const_lv7_0,
        inbuf_fifo_cap => ap_const_lv7_0,
        inbuf_empty_n => inbuf_empty_n,
        inbuf_read => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_inbuf_read,
        m_axi_gmem0_AWVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv32_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => m_axi_gmem0_BRESP,
        m_axi_gmem0_BID => m_axi_gmem0_BID,
        m_axi_gmem0_BUSER => m_axi_gmem0_BUSER,
        count => count_reg_321,
        sext_ln21_1 => trunc_ln21_1_reg_328);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln34_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_ready = ap_const_logic_1)) then 
                    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    s2m_buf_sts_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                s2m_buf_sts_preg <= ap_const_lv1_0;
            else
                if (((icmp_ln34_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
                    s2m_buf_sts_preg <= ap_sig_allocacmp_out_sts_load;
                end if; 
            end if;
        end if;
    end process;


    final_s2m_len_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((in_en_clrsts_read_read_fu_98_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                final_s2m_len <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
                final_s2m_len <= add_ln27_fu_255_p2;
            end if; 
        end if;
    end process;

    idx_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                idx_fu_88 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
                idx_fu_88 <= add_ln26_fu_250_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((incount_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                count_reg_321 <= incount_dout;
                empty_reg_334 <= empty_fu_225_p3;
                trunc_ln21_1_reg_328 <= add_ln21_1_fu_210_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                in_s2m_len_read_reg_300 <= in_s2m_len_dout;
                out_memory_read_reg_292 <= out_memory_dout;
                sext_ln18_reg_313 <= sext_ln18_fu_171_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln29_fu_266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then
                out_sts <= ap_const_lv1_1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, incount_empty_n, m_axi_gmem0_AWREADY, m_axi_gmem0_BVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state19, ap_block_state1, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_done, ap_CS_fsm_state5, icmp_ln34_fu_282_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((incount_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln34_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln34_fu_282_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln21_1_fu_210_p2 <= std_logic_vector(unsigned(out_memory_read_reg_292) + unsigned(shl_ln_fu_202_p3));
    add_ln21_fu_197_p2 <= std_logic_vector(unsigned(trunc_ln21_fu_193_p1) + unsigned(sext_ln18_reg_313));
    add_ln26_fu_250_p2 <= std_logic_vector(signed(sext_ln21_fu_247_p1) + signed(idx_fu_88));
    add_ln27_fu_255_p2 <= std_logic_vector(unsigned(final_s2m_len) + unsigned(count_reg_321));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(m_axi_gmem0_BVALID)
    begin
        if ((m_axi_gmem0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(incount_empty_n)
    begin
        if ((incount_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_gmem0_AWREADY)
    begin
        if ((m_axi_gmem0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_done)
    begin
        if ((grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, in_en_clrsts_empty_n, in_s2m_len_empty_n, out_memory_empty_n)
    begin
                ap_block_state1 <= ((in_s2m_len_empty_n = ap_const_logic_0) or (in_en_clrsts_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (out_memory_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, m_axi_gmem0_BVALID, ap_CS_fsm_state19, icmp_ln34_fu_282_p2)
    begin
        if (((icmp_ln34_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_phi_ln21_phi_fu_133_p4_assign_proc : process(ap_CS_fsm_state1, sub_ln16_fu_158_p2, in_en_clrsts_read_read_fu_98_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
            if ((in_en_clrsts_read_read_fu_98_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_phi_ln21_phi_fu_133_p4 <= ap_const_lv33_0;
            elsif ((in_en_clrsts_read_read_fu_98_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_phi_ln21_phi_fu_133_p4 <= sub_ln16_fu_158_p2;
            else 
                ap_phi_mux_phi_ln21_phi_fu_133_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_phi_ln21_phi_fu_133_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19, icmp_ln34_fu_282_p2)
    begin
        if (((icmp_ln34_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_out_sts_load_assign_proc : process(out_sts, ap_CS_fsm_state19, icmp_ln29_fu_266_p2)
    begin
        if (((icmp_ln29_fu_266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_sig_allocacmp_out_sts_load <= ap_const_lv1_1;
        else 
            ap_sig_allocacmp_out_sts_load <= out_sts;
        end if; 
    end process;

    empty_fu_225_p3 <= 
        trunc_ln8_fu_183_p1 when (icmp_ln21_fu_187_p2(0) = '1') else 
        ap_const_lv31_0;

    gmem0_blk_n_AW_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            gmem0_blk_n_AW <= m_axi_gmem0_AWREADY;
        else 
            gmem0_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_B_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            gmem0_blk_n_B <= m_axi_gmem0_BVALID;
        else 
            gmem0_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_ap_start_reg;
    icmp_ln21_fu_187_p0 <= incount_dout;
    icmp_ln21_fu_187_p2 <= "1" when (signed(icmp_ln21_fu_187_p0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln29_fu_266_p2 <= "1" when (add_ln27_fu_255_p2 = in_s2m_len_read_reg_300) else "0";
    icmp_ln34_fu_282_p2 <= "1" when (unsigned(add_ln27_fu_255_p2) < unsigned(in_s2m_len_read_reg_300)) else "0";

    in_en_clrsts_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_en_clrsts_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_en_clrsts_blk_n <= in_en_clrsts_empty_n;
        else 
            in_en_clrsts_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_en_clrsts_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            in_en_clrsts_read <= ap_const_logic_1;
        else 
            in_en_clrsts_read <= ap_const_logic_0;
        end if; 
    end process;

    in_en_clrsts_read_read_fu_98_p2 <= in_en_clrsts_dout;

    in_s2m_len_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_s2m_len_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_s2m_len_blk_n <= in_s2m_len_empty_n;
        else 
            in_s2m_len_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_s2m_len_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            in_s2m_len_read <= ap_const_logic_1;
        else 
            in_s2m_len_read <= ap_const_logic_0;
        end if; 
    end process;


    inbuf_read_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_inbuf_read, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            inbuf_read <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_inbuf_read;
        else 
            inbuf_read <= ap_const_logic_0;
        end if; 
    end process;


    incount_blk_n_assign_proc : process(incount_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            incount_blk_n <= incount_empty_n;
        else 
            incount_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    incount_read_assign_proc : process(incount_empty_n, ap_CS_fsm_state2)
    begin
        if (((incount_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            incount_read <= ap_const_logic_1;
        else 
            incount_read <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;

    m_axi_gmem0_AWADDR_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWADDR, ap_CS_fsm_state4, ap_CS_fsm_state5, sext_ln21_1_fu_233_p1)
    begin
        if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_AWADDR <= sext_ln21_1_fu_233_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWADDR <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWADDR;
        else 
            m_axi_gmem0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_AWBURST_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWBURST, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWBURST <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWBURST;
        else 
            m_axi_gmem0_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem0_AWCACHE_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWCACHE, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWCACHE <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWCACHE;
        else 
            m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem0_AWID_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWID, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWID;
        else 
            m_axi_gmem0_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem0_AWLEN_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLEN, ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln21_fu_243_p1)
    begin
        if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_AWLEN <= zext_ln21_fu_243_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWLEN <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLEN;
        else 
            m_axi_gmem0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_AWLOCK_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLOCK, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWLOCK <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWLOCK;
        else 
            m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem0_AWPROT_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWPROT, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWPROT <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWPROT;
        else 
            m_axi_gmem0_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem0_AWQOS_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWQOS, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWQOS <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWQOS;
        else 
            m_axi_gmem0_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem0_AWREGION_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWREGION, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWREGION <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWREGION;
        else 
            m_axi_gmem0_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem0_AWSIZE_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWSIZE, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWSIZE <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWSIZE;
        else 
            m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem0_AWUSER_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWUSER, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWUSER <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWUSER;
        else 
            m_axi_gmem0_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem0_AWVALID_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWVALID, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWVALID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_AWVALID;
        else 
            m_axi_gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_BREADY_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_BREADY, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
            m_axi_gmem0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_BREADY <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_BREADY;
        else 
            m_axi_gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_RREADY <= ap_const_logic_0;
    m_axi_gmem0_WDATA <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WDATA;
    m_axi_gmem0_WID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WID;
    m_axi_gmem0_WLAST <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WLAST;
    m_axi_gmem0_WSTRB <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WSTRB;
    m_axi_gmem0_WUSER <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WUSER;

    m_axi_gmem0_WVALID_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WVALID, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_WVALID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_21_2_fu_140_m_axi_gmem0_WVALID;
        else 
            m_axi_gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    out_memory_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_memory_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_memory_blk_n <= out_memory_empty_n;
        else 
            out_memory_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_memory_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            out_memory_read <= ap_const_logic_1;
        else 
            out_memory_read <= ap_const_logic_0;
        end if; 
    end process;


    s2m_buf_sts_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19, ap_sig_allocacmp_out_sts_load, s2m_buf_sts_preg, icmp_ln34_fu_282_p2)
    begin
        if (((icmp_ln34_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
            s2m_buf_sts <= ap_sig_allocacmp_out_sts_load;
        else 
            s2m_buf_sts <= s2m_buf_sts_preg;
        end if; 
    end process;


    s2m_buf_sts_ap_vld_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19, icmp_ln34_fu_282_p2)
    begin
        if (((icmp_ln34_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem0_BVALID = ap_const_logic_1))) then 
            s2m_buf_sts_ap_vld <= ap_const_logic_1;
        else 
            s2m_buf_sts_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln18_fu_171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_phi_ln21_phi_fu_133_p4),62));

        sext_ln21_1_fu_233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln21_1_reg_328),64));

        sext_ln21_fu_247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(count_reg_321),64));

    shl_ln_fu_202_p3 <= (add_ln21_fu_197_p2 & ap_const_lv2_0);
    sub_ln16_fu_158_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(zext_ln16_fu_154_p1));
    trunc_ln21_fu_193_p1 <= idx_fu_88(62 - 1 downto 0);
    trunc_ln8_fu_183_p0 <= incount_dout;
    trunc_ln8_fu_183_p1 <= trunc_ln8_fu_183_p0(31 - 1 downto 0);
    zext_ln16_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(final_s2m_len),33));
    zext_ln21_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_334),32));
end behav;
