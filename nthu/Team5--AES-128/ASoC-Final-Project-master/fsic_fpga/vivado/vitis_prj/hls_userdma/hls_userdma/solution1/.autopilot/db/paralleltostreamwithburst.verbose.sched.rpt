

================================================================
== Vitis HLS Report for 'paralleltostreamwithburst'
================================================================
* Date:           Sat Jun 15 17:11:13 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        hls_userdma
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_93_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.63>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%idx = alloca i32 1"   --->   Operation 22 'alloca' 'idx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%count = alloca i32 1" [userdma.cpp:84]   --->   Operation 23 'alloca' 'count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %m2s_enb_clrsts_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%endianness_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %endianness"   --->   Operation 25 'read' 'endianness_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%in_m2s_len_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_m2s_len"   --->   Operation 26 'read' 'in_m2s_len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%in_en_clrsts_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %in_en_clrsts"   --->   Operation 27 'read' 'in_en_clrsts_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%in_memory_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %in_memory"   --->   Operation 28 'read' 'in_memory_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (3.63ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i1P0A, i1 %m2s_enb_clrsts_c, i1 %in_en_clrsts_read"   --->   Operation 29 'write' 'write_ln0' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i33 %outbuf, void @empty, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem1, void @empty_1, i32 0, i32 0, void @empty_2, i32 10, i32 1024, void @empty_5, void @empty_4, void @empty_2, i32 4, i32 16, i32 16, i32 16, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.69ns)   --->   "%in_m2s_len_1 = select i1 %in_en_clrsts_read, i32 0, i32 %in_m2s_len_read" [userdma.cpp:88]   --->   Operation 32 'select' 'in_m2s_len_1' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%store_ln84 = store i32 %in_m2s_len_1, i32 %count" [userdma.cpp:84]   --->   Operation 33 'store' 'store_ln84' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 34 [1/1] (1.58ns)   --->   "%store_ln0 = store i64 0, i64 %idx"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln93 = br void %do.body" [userdma.cpp:93]   --->   Operation 35 'br' 'br_ln93' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.01>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%idx_load = load i64 %idx" [userdma.cpp:100]   --->   Operation 36 'load' 'idx_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%count_2 = load i32 %count"   --->   Operation 37 'load' 'count_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (2.55ns)   --->   "%icmp_ln94 = icmp_sgt  i32 %count_2, i32 16" [userdma.cpp:94]   --->   Operation 38 'icmp' 'icmp_ln94' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.69ns)   --->   "%count_3 = select i1 %icmp_ln94, i32 16, i32 %count_2" [userdma.cpp:94]   --->   Operation 39 'select' 'count_3' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i32 %count_3" [userdma.cpp:84]   --->   Operation 40 'trunc' 'trunc_ln84' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (2.55ns)   --->   "%icmp_ln100 = icmp_sgt  i32 %count_3, i32 0" [userdma.cpp:100]   --->   Operation 41 'icmp' 'icmp_ln100' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node add_ln100)   --->   "%shl_ln100 = shl i64 %idx_load, i64 2" [userdma.cpp:100]   --->   Operation 42 'shl' 'shl_ln100' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (3.52ns) (out node of the LUT)   --->   "%add_ln100 = add i64 %shl_ln100, i64 %in_memory_read" [userdma.cpp:100]   --->   Operation 43 'add' 'add_ln100' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln100, i32 2, i32 63" [userdma.cpp:100]   --->   Operation 44 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.21ns)   --->   "%empty = select i1 %icmp_ln100, i5 %trunc_ln84, i5 0" [userdma.cpp:100]   --->   Operation 45 'select' 'empty' <Predicate = true> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp = partselect i28 @_ssdm_op_PartSelect.i28.i32.i32.i32, i32 %count_2, i32 4, i32 31"   --->   Operation 46 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (2.43ns)   --->   "%icmp = icmp_slt  i28 %tmp, i28 1"   --->   Operation 47 'icmp' 'icmp' <Predicate = true> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%sext_ln116 = sext i32 %count_3" [userdma.cpp:116]   --->   Operation 48 'sext' 'sext_ln116' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%sext_ln100 = sext i62 %trunc_ln1" [userdma.cpp:100]   --->   Operation 49 'sext' 'sext_ln100' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%gmem1_addr = getelementptr i32 %gmem1, i64 %sext_ln100" [userdma.cpp:100]   --->   Operation 50 'getelementptr' 'gmem1_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln100 = zext i5 %empty" [userdma.cpp:100]   --->   Operation 51 'zext' 'zext_ln100' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [17/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 52 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 53 [1/1] (3.52ns)   --->   "%add_ln116 = add i64 %sext_ln116, i64 %idx_load" [userdma.cpp:116]   --->   Operation 53 'add' 'add_ln116' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (1.58ns)   --->   "%store_ln116 = store i64 %add_ln116, i64 %idx" [userdma.cpp:116]   --->   Operation 54 'store' 'store_ln116' <Predicate = true> <Delay = 1.58>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 55 [16/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 55 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 56 [15/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 56 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 57 [14/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 57 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 58 [13/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 58 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 59 [12/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 59 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 60 [11/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 60 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 61 [10/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 61 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 62 [9/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 62 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 63 [8/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 63 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 64 [7/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 64 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 65 [6/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 65 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 66 [5/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 66 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 67 [4/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 67 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 68 [3/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 68 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 69 [2/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 69 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 70 [1/17] (7.30ns)   --->   "%empty_50 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem1_addr, i32 %zext_ln100" [userdma.cpp:100]   --->   Operation 70 'readreq' 'empty_50' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 71 [1/1] (0.69ns)   --->   "%select_ln100 = select i1 %icmp, i32 %count_2, i32 16" [userdma.cpp:100]   --->   Operation 71 'select' 'select_ln100' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 72 [1/1] (0.00ns)   --->   "%empty_51 = trunc i32 %select_ln100" [userdma.cpp:100]   --->   Operation 72 'trunc' 'empty_51' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 73 [1/1] (2.55ns)   --->   "%empty_52 = icmp_sgt  i32 %select_ln100, i32 0" [userdma.cpp:100]   --->   Operation 73 'icmp' 'empty_52' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 74 [1/1] (1.21ns)   --->   "%empty_53 = select i1 %empty_52, i5 %empty_51, i5 0" [userdma.cpp:100]   --->   Operation 74 'select' 'empty_53' <Predicate = true> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 20 <SV = 19> <Delay = 6.69>
ST_20 : Operation 75 [1/1] (2.55ns)   --->   "%sub = add i32 %count_3, i32 4294967295" [userdma.cpp:94]   --->   Operation 75 'add' 'sub' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i5 %empty_53" [userdma.cpp:88]   --->   Operation 76 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 77 [1/1] (2.55ns)   --->   "%in_m2s_len_2 = sub i32 %count_2, i32 %zext_ln88" [userdma.cpp:88]   --->   Operation 77 'sub' 'in_m2s_len_2' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 78 [1/1] (0.00ns)   --->   "%empty_54 = wait i32 @_ssdm_op_Wait"   --->   Operation 78 'wait' 'empty_54' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 79 [2/2] (4.14ns)   --->   "%call_ln94 = call void @paralleltostreamwithburst_Pipeline_VITIS_LOOP_100_2, i32 %count_2, i32 %count_3, i32 %gmem1, i62 %trunc_ln1, i1 %endianness_read, i32 %sub, i33 %outbuf" [userdma.cpp:94]   --->   Operation 79 'call' 'call_ln94' <Predicate = true> <Delay = 4.14> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 80 [1/1] (2.55ns)   --->   "%icmp_ln118 = icmp_eq  i32 %count_2, i32 %zext_ln88" [userdma.cpp:118]   --->   Operation 80 'icmp' 'icmp_ln118' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 81 [1/1] (1.58ns)   --->   "%store_ln84 = store i32 %in_m2s_len_2, i32 %count" [userdma.cpp:84]   --->   Operation 81 'store' 'store_ln84' <Predicate = true> <Delay = 1.58>

State 21 <SV = 20> <Delay = 0.00>
ST_21 : Operation 82 [1/1] (0.00ns)   --->   "%specloopname_ln93 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [userdma.cpp:93]   --->   Operation 82 'specloopname' 'specloopname_ln93' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 83 [1/2] (0.00ns)   --->   "%call_ln94 = call void @paralleltostreamwithburst_Pipeline_VITIS_LOOP_100_2, i32 %count_2, i32 %count_3, i32 %gmem1, i62 %trunc_ln1, i1 %endianness_read, i32 %sub, i33 %outbuf" [userdma.cpp:94]   --->   Operation 83 'call' 'call_ln94' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 84 [1/1] (0.00ns)   --->   "%br_ln118 = br i1 %icmp_ln118, void %do.body, void %do.end" [userdma.cpp:118]   --->   Operation 84 'br' 'br_ln118' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 85 [1/1] (0.00ns)   --->   "%ret_ln119 = ret" [userdma.cpp:119]   --->   Operation 85 'ret' 'ret_ln119' <Predicate = (icmp_ln118)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.634ns
The critical path consists of the following:
	wire read operation ('in_en_clrsts_read') on port 'in_en_clrsts' [13]  (0.000 ns)
	fifo write operation ('write_ln0') on port 'm2s_enb_clrsts_c' [15]  (3.634 ns)

 <State 2>: 7.017ns
The critical path consists of the following:
	'load' operation 32 bit ('count') on local variable 'count', userdma.cpp:84 [24]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln94', userdma.cpp:94) [26]  (2.552 ns)
	'select' operation 32 bit ('count', userdma.cpp:94) [27]  (0.698 ns)
	'icmp' operation 1 bit ('icmp_ln100', userdma.cpp:100) [30]  (2.552 ns)
	'select' operation 5 bit ('empty', userdma.cpp:100) [37]  (1.215 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('gmem1_addr', userdma.cpp:100) [36]  (0.000 ns)
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_50', userdma.cpp:100) on port 'gmem1' (userdma.cpp:100) [39]  (7.300 ns)

 <State 20>: 6.692ns
The critical path consists of the following:
	'add' operation 32 bit ('sub', userdma.cpp:94) [29]  (2.552 ns)
	'call' operation 0 bit ('call_ln94', userdma.cpp:94) to 'paralleltostreamwithburst_Pipeline_VITIS_LOOP_100_2' [49]  (4.140 ns)

 <State 21>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
